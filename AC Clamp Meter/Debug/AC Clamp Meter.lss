
AC Clamp Meter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000a  00800100  00000932  000009c6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000932  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010a  0080010a  000009d0  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000009d0  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a00  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001a8  00000000  00000000  00000a40  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000010df  00000000  00000000  00000be8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b31  00000000  00000000  00001cc7  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000afb  00000000  00000000  000027f8  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000304  00000000  00000000  000032f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000738  00000000  00000000  000035f8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000432  00000000  00000000  00003d30  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00004162  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 a4 01 	jmp	0x348	; 0x348 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 c4 01 	jmp	0x388	; 0x388 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	e2 e3       	ldi	r30, 0x32	; 50
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	aa 30       	cpi	r26, 0x0A	; 10
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	aa e0       	ldi	r26, 0x0A	; 10
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a0 31       	cpi	r26, 0x10	; 16
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 dc 00 	call	0x1b8	; 0x1b8 <main>
  9e:	0c 94 97 04 	jmp	0x92e	; 0x92e <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <display_refresh>:
	uint8_t number_of_bytes = 2;
	for(byte = 0; byte < number_of_bytes; byte++) {
		USART_0_write((data >> (byte*8)) & 0xff);
		//SPI_0_write((data >> (byte*8)) & 0xff);
	}
}
  a6:	cf 93       	push	r28
  a8:	df 93       	push	r29
  aa:	ec 01       	movw	r28, r24
  ac:	2b b1       	in	r18, 0x0b	; 11
  ae:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
  b2:	f0 e0       	ldi	r31, 0x00	; 0
  b4:	ee 0f       	add	r30, r30
  b6:	ff 1f       	adc	r31, r31
  b8:	e8 0f       	add	r30, r24
  ba:	f9 1f       	adc	r31, r25
  bc:	81 e0       	ldi	r24, 0x01	; 1
  be:	90 e0       	ldi	r25, 0x00	; 0
  c0:	00 80       	ld	r0, Z
  c2:	02 c0       	rjmp	.+4      	; 0xc8 <display_refresh+0x22>
  c4:	88 0f       	add	r24, r24
  c6:	99 1f       	adc	r25, r25
  c8:	0a 94       	dec	r0
  ca:	e2 f7       	brpl	.-8      	; 0xc4 <display_refresh+0x1e>
  cc:	80 95       	com	r24
  ce:	82 23       	and	r24, r18
  d0:	8b b9       	out	0x0b, r24	; 11
  d2:	5f 98       	cbi	0x0b, 7	; 11
  d4:	5f 9a       	sbi	0x0b, 7	; 11
  d6:	80 91 0a 01 	lds	r24, 0x010A	; 0x80010a <__data_end>
  da:	8f 5f       	subi	r24, 0xFF	; 255
  dc:	83 30       	cpi	r24, 0x03	; 3
  de:	18 f4       	brcc	.+6      	; 0xe6 <display_refresh+0x40>
  e0:	80 93 0a 01 	sts	0x010A, r24	; 0x80010a <__data_end>
  e4:	02 c0       	rjmp	.+4      	; 0xea <display_refresh+0x44>
  e6:	10 92 0a 01 	sts	0x010A, r1	; 0x80010a <__data_end>
  ea:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
  ee:	f0 e0       	ldi	r31, 0x00	; 0
  f0:	ee 0f       	add	r30, r30
  f2:	ff 1f       	adc	r31, r31
  f4:	ec 0f       	add	r30, r28
  f6:	fd 1f       	adc	r31, r29
  f8:	81 81       	ldd	r24, Z+1	; 0x01
  fa:	0e 94 10 02 	call	0x420	; 0x420 <SPI_0_write>
  fe:	2b b1       	in	r18, 0x0b	; 11
 100:	e0 91 0a 01 	lds	r30, 0x010A	; 0x80010a <__data_end>
 104:	f0 e0       	ldi	r31, 0x00	; 0
 106:	ee 0f       	add	r30, r30
 108:	ff 1f       	adc	r31, r31
 10a:	ec 0f       	add	r30, r28
 10c:	fd 1f       	adc	r31, r29
 10e:	81 e0       	ldi	r24, 0x01	; 1
 110:	90 e0       	ldi	r25, 0x00	; 0
 112:	00 80       	ld	r0, Z
 114:	02 c0       	rjmp	.+4      	; 0x11a <display_refresh+0x74>
 116:	88 0f       	add	r24, r24
 118:	99 1f       	adc	r25, r25
 11a:	0a 94       	dec	r0
 11c:	e2 f7       	brpl	.-8      	; 0x116 <display_refresh+0x70>
 11e:	82 2b       	or	r24, r18
 120:	8b b9       	out	0x0b, r24	; 11
 122:	df 91       	pop	r29
 124:	cf 91       	pop	r28
 126:	08 95       	ret

00000128 <extract_digits>:
 128:	0f 93       	push	r16
 12a:	1f 93       	push	r17
 12c:	cf 93       	push	r28
 12e:	df 93       	push	r29
 130:	ac 01       	movw	r20, r24
 132:	eb 01       	movw	r28, r22
 134:	8b 01       	movw	r16, r22
 136:	0a 5f       	subi	r16, 0xFA	; 250
 138:	1f 4f       	sbci	r17, 0xFF	; 255
 13a:	9a 01       	movw	r18, r20
 13c:	ad ec       	ldi	r26, 0xCD	; 205
 13e:	bc ec       	ldi	r27, 0xCC	; 204
 140:	0e 94 88 04 	call	0x910	; 0x910 <__umulhisi3>
 144:	96 95       	lsr	r25
 146:	87 95       	ror	r24
 148:	96 95       	lsr	r25
 14a:	87 95       	ror	r24
 14c:	96 95       	lsr	r25
 14e:	87 95       	ror	r24
 150:	9c 01       	movw	r18, r24
 152:	22 0f       	add	r18, r18
 154:	33 1f       	adc	r19, r19
 156:	88 0f       	add	r24, r24
 158:	99 1f       	adc	r25, r25
 15a:	88 0f       	add	r24, r24
 15c:	99 1f       	adc	r25, r25
 15e:	88 0f       	add	r24, r24
 160:	99 1f       	adc	r25, r25
 162:	82 0f       	add	r24, r18
 164:	93 1f       	adc	r25, r19
 166:	fa 01       	movw	r30, r20
 168:	e8 1b       	sub	r30, r24
 16a:	f9 0b       	sbc	r31, r25
 16c:	ff 27       	eor	r31, r31
 16e:	e0 50       	subi	r30, 0x00	; 0
 170:	ff 4f       	sbci	r31, 0xFF	; 255
 172:	80 81       	ld	r24, Z
 174:	89 83       	std	Y+1, r24	; 0x01
 176:	9a 01       	movw	r18, r20
 178:	0e 94 88 04 	call	0x910	; 0x910 <__umulhisi3>
 17c:	ac 01       	movw	r20, r24
 17e:	56 95       	lsr	r21
 180:	47 95       	ror	r20
 182:	56 95       	lsr	r21
 184:	47 95       	ror	r20
 186:	56 95       	lsr	r21
 188:	47 95       	ror	r20
 18a:	22 96       	adiw	r28, 0x02	; 2
 18c:	c0 17       	cp	r28, r16
 18e:	d1 07       	cpc	r29, r17
 190:	a1 f6       	brne	.-88     	; 0x13a <extract_digits+0x12>
 192:	df 91       	pop	r29
 194:	cf 91       	pop	r28
 196:	1f 91       	pop	r17
 198:	0f 91       	pop	r16
 19a:	08 95       	ret

0000019c <scale_output>:
 19c:	bc 01       	movw	r22, r24
 19e:	80 e0       	ldi	r24, 0x00	; 0
 1a0:	90 e0       	ldi	r25, 0x00	; 0
 1a2:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__floatunsisf>
 1a6:	25 e7       	ldi	r18, 0x75	; 117
 1a8:	32 e0       	ldi	r19, 0x02	; 2
 1aa:	4a e7       	ldi	r20, 0x7A	; 122
 1ac:	5f e3       	ldi	r21, 0x3F	; 63
 1ae:	0e 94 5f 03 	call	0x6be	; 0x6be <__mulsf3>
 1b2:	0e 94 cc 03 	call	0x798	; 0x798 <round>
 1b6:	08 95       	ret

000001b8 <main>:
 1b8:	cf 93       	push	r28
 1ba:	df 93       	push	r29
 1bc:	cd b7       	in	r28, 0x3d	; 61
 1be:	de b7       	in	r29, 0x3e	; 62
 1c0:	2b 97       	sbiw	r28, 0x0b	; 11
 1c2:	0f b6       	in	r0, 0x3f	; 63
 1c4:	f8 94       	cli
 1c6:	de bf       	out	0x3e, r29	; 62
 1c8:	0f be       	out	0x3f, r0	; 63
 1ca:	cd bf       	out	0x3d, r28	; 61
 1cc:	0e 94 fe 01 	call	0x3fc	; 0x3fc <i_o_init>
 1d0:	0e 94 f5 01 	call	0x3ea	; 0x3ea <device_init>
 1d4:	80 91 0f 01 	lds	r24, 0x010F	; 0x80010f <adc_channel>
 1d8:	0e 94 e4 01 	call	0x3c8	; 0x3c8 <ADC_0_select_channel>
 1dc:	88 e2       	ldi	r24, 0x28	; 40
 1de:	89 83       	std	Y+1, r24	; 0x01
 1e0:	1a 82       	std	Y+2, r1	; 0x02
 1e2:	1b 82       	std	Y+3, r1	; 0x03
 1e4:	1c 82       	std	Y+4, r1	; 0x04
 1e6:	1d 82       	std	Y+5, r1	; 0x05
 1e8:	84 e0       	ldi	r24, 0x04	; 4
 1ea:	8e 83       	std	Y+6, r24	; 0x06
 1ec:	1f 82       	std	Y+7, r1	; 0x07
 1ee:	86 e0       	ldi	r24, 0x06	; 6
 1f0:	88 87       	std	Y+8, r24	; 0x08
 1f2:	19 86       	std	Y+9, r1	; 0x09
 1f4:	85 e0       	ldi	r24, 0x05	; 5
 1f6:	8a 87       	std	Y+10, r24	; 0x0a
 1f8:	1b 86       	std	Y+11, r1	; 0x0b
 1fa:	78 94       	sei
 1fc:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <mode>
 200:	2f ef       	ldi	r18, 0xFF	; 255
 202:	83 ed       	ldi	r24, 0xD3	; 211
 204:	90 e3       	ldi	r25, 0x30	; 48
 206:	21 50       	subi	r18, 0x01	; 1
 208:	80 40       	sbci	r24, 0x00	; 0
 20a:	90 40       	sbci	r25, 0x00	; 0
 20c:	e1 f7       	brne	.-8      	; 0x206 <main+0x4e>
 20e:	00 c0       	rjmp	.+0      	; 0x210 <main+0x58>
 210:	00 00       	nop
 212:	e1 2c       	mov	r14, r1
 214:	f1 2c       	mov	r15, r1
 216:	00 e0       	ldi	r16, 0x00	; 0
 218:	10 e0       	ldi	r17, 0x00	; 0
 21a:	0f 2e       	mov	r0, r31
 21c:	f8 e2       	ldi	r31, 0x28	; 40
 21e:	4f 2e       	mov	r4, r31
 220:	51 2c       	mov	r5, r1
 222:	61 2c       	mov	r6, r1
 224:	71 2c       	mov	r7, r1
 226:	f0 2d       	mov	r31, r0
 228:	0f 2e       	mov	r0, r31
 22a:	f8 e2       	ldi	r31, 0x28	; 40
 22c:	cf 2e       	mov	r12, r31
 22e:	f0 2d       	mov	r31, r0
 230:	d1 2c       	mov	r13, r1
 232:	21 2c       	mov	r2, r1
 234:	31 2c       	mov	r3, r1
 236:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <mode>
 23a:	81 30       	cpi	r24, 0x01	; 1
 23c:	09 f1       	breq	.+66     	; 0x280 <main+0xc8>
 23e:	38 f0       	brcs	.+14     	; 0x24e <main+0x96>
 240:	82 30       	cpi	r24, 0x02	; 2
 242:	09 f4       	brne	.+2      	; 0x246 <main+0x8e>
 244:	4b c0       	rjmp	.+150    	; 0x2dc <main+0x124>
 246:	83 30       	cpi	r24, 0x03	; 3
 248:	09 f4       	brne	.+2      	; 0x24c <main+0x94>
 24a:	6c c0       	rjmp	.+216    	; 0x324 <main+0x16c>
 24c:	f4 cf       	rjmp	.-24     	; 0x236 <main+0x7e>
 24e:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <timer_ticks>
 252:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <timer_ticks+0x1>
 256:	89 35       	cpi	r24, 0x59	; 89
 258:	92 40       	sbci	r25, 0x02	; 2
 25a:	38 f0       	brcs	.+14     	; 0x26a <main+0xb2>
 25c:	83 e0       	ldi	r24, 0x03	; 3
 25e:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <mode>
 262:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <timer_ticks+0x1>
 266:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <timer_ticks>
 26a:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <disp_timer>
 26e:	80 31       	cpi	r24, 0x10	; 16
 270:	10 f3       	brcs	.-60     	; 0x236 <main+0x7e>
 272:	10 92 0b 01 	sts	0x010B, r1	; 0x80010b <disp_timer>
 276:	ce 01       	movw	r24, r28
 278:	06 96       	adiw	r24, 0x06	; 6
 27a:	0e 94 53 00 	call	0xa6	; 0xa6 <display_refresh>
 27e:	db cf       	rjmp	.-74     	; 0x236 <main+0x7e>
 280:	44 9a       	sbi	0x08, 4	; 8
 282:	0e 94 ec 01 	call	0x3d8	; 0x3d8 <ADC_0_get_conversion_result>
 286:	bc 01       	movw	r22, r24
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__floatunsisf>
 290:	9b 01       	movw	r18, r22
 292:	ac 01       	movw	r20, r24
 294:	0e 94 5f 03 	call	0x6be	; 0x6be <__mulsf3>
 298:	4b 01       	movw	r8, r22
 29a:	5c 01       	movw	r10, r24
 29c:	6e 2d       	mov	r22, r14
 29e:	7f 2d       	mov	r23, r15
 2a0:	80 2f       	mov	r24, r16
 2a2:	91 2f       	mov	r25, r17
 2a4:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__floatunsisf>
 2a8:	9b 01       	movw	r18, r22
 2aa:	ac 01       	movw	r20, r24
 2ac:	c5 01       	movw	r24, r10
 2ae:	b4 01       	movw	r22, r8
 2b0:	0e 94 36 02 	call	0x46c	; 0x46c <__addsf3>
 2b4:	0e 94 a2 02 	call	0x544	; 0x544 <__fixunssfsi>
 2b8:	e6 2e       	mov	r14, r22
 2ba:	f7 2e       	mov	r15, r23
 2bc:	08 2f       	mov	r16, r24
 2be:	19 2f       	mov	r17, r25
 2c0:	89 81       	ldd	r24, Y+1	; 0x01
 2c2:	81 50       	subi	r24, 0x01	; 1
 2c4:	89 83       	std	Y+1, r24	; 0x01
 2c6:	89 81       	ldd	r24, Y+1	; 0x01
 2c8:	81 11       	cpse	r24, r1
 2ca:	04 c0       	rjmp	.+8      	; 0x2d4 <main+0x11c>
 2cc:	92 e0       	ldi	r25, 0x02	; 2
 2ce:	90 93 0e 01 	sts	0x010E, r25	; 0x80010e <mode>
 2d2:	02 c0       	rjmp	.+4      	; 0x2d8 <main+0x120>
 2d4:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <mode>
 2d8:	44 98       	cbi	0x08, 4	; 8
 2da:	ad cf       	rjmp	.-166    	; 0x236 <main+0x7e>
 2dc:	6e 2d       	mov	r22, r14
 2de:	7f 2d       	mov	r23, r15
 2e0:	80 2f       	mov	r24, r16
 2e2:	91 2f       	mov	r25, r17
 2e4:	a3 01       	movw	r20, r6
 2e6:	92 01       	movw	r18, r4
 2e8:	0e 94 66 04 	call	0x8cc	; 0x8cc <__udivmodsi4>
 2ec:	2a 83       	std	Y+2, r18	; 0x02
 2ee:	3b 83       	std	Y+3, r19	; 0x03
 2f0:	4c 83       	std	Y+4, r20	; 0x04
 2f2:	5d 83       	std	Y+5, r21	; 0x05
 2f4:	8a 80       	ldd	r8, Y+2	; 0x02
 2f6:	9b 80       	ldd	r9, Y+3	; 0x03
 2f8:	ac 80       	ldd	r10, Y+4	; 0x04
 2fa:	bd 80       	ldd	r11, Y+5	; 0x05
 2fc:	c5 01       	movw	r24, r10
 2fe:	b4 01       	movw	r22, r8
 300:	0e 94 d1 02 	call	0x5a2	; 0x5a2 <__floatunsisf>
 304:	0e 94 f6 03 	call	0x7ec	; 0x7ec <sqrt>
 308:	0e 94 a2 02 	call	0x544	; 0x544 <__fixunssfsi>
 30c:	6a 83       	std	Y+2, r22	; 0x02
 30e:	7b 83       	std	Y+3, r23	; 0x03
 310:	8c 83       	std	Y+4, r24	; 0x04
 312:	9d 83       	std	Y+5, r25	; 0x05
 314:	c9 82       	std	Y+1, r12	; 0x01
 316:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <mode>
 31a:	ed 2c       	mov	r14, r13
 31c:	f1 2c       	mov	r15, r1
 31e:	02 2d       	mov	r16, r2
 320:	13 2d       	mov	r17, r3
 322:	89 cf       	rjmp	.-238    	; 0x236 <main+0x7e>
 324:	8a 81       	ldd	r24, Y+2	; 0x02
 326:	9b 81       	ldd	r25, Y+3	; 0x03
 328:	ac 81       	ldd	r26, Y+4	; 0x04
 32a:	bd 81       	ldd	r27, Y+5	; 0x05
 32c:	0e 94 ce 00 	call	0x19c	; 0x19c <scale_output>
 330:	0e 94 a2 02 	call	0x544	; 0x544 <__fixunssfsi>
 334:	dc 01       	movw	r26, r24
 336:	cb 01       	movw	r24, r22
 338:	be 01       	movw	r22, r28
 33a:	6a 5f       	subi	r22, 0xFA	; 250
 33c:	7f 4f       	sbci	r23, 0xFF	; 255
 33e:	0e 94 94 00 	call	0x128	; 0x128 <extract_digits>
 342:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <mode>
 346:	77 cf       	rjmp	.-274    	; 0x236 <main+0x7e>

00000348 <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
 348:	1f 92       	push	r1
 34a:	0f 92       	push	r0
 34c:	0f b6       	in	r0, 0x3f	; 63
 34e:	0f 92       	push	r0
 350:	11 24       	eor	r1, r1
 352:	8f 93       	push	r24
 354:	9f 93       	push	r25
	timer_ticks += 1;
 356:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <timer_ticks>
 35a:	90 91 0d 01 	lds	r25, 0x010D	; 0x80010d <timer_ticks+0x1>
 35e:	01 96       	adiw	r24, 0x01	; 1
 360:	90 93 0d 01 	sts	0x010D, r25	; 0x80010d <timer_ticks+0x1>
 364:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <timer_ticks>
	disp_timer += 1;
 368:	80 91 0b 01 	lds	r24, 0x010B	; 0x80010b <disp_timer>
 36c:	8f 5f       	subi	r24, 0xFF	; 255
 36e:	80 93 0b 01 	sts	0x010B, r24	; 0x80010b <disp_timer>
	PORTC ^= (1 << TIMER_OUT);
 372:	98 b1       	in	r25, 0x08	; 8
 374:	80 e2       	ldi	r24, 0x20	; 32
 376:	89 27       	eor	r24, r25
 378:	88 b9       	out	0x08, r24	; 8
}
 37a:	9f 91       	pop	r25
 37c:	8f 91       	pop	r24
 37e:	0f 90       	pop	r0
 380:	0f be       	out	0x3f, r0	; 63
 382:	0f 90       	pop	r0
 384:	1f 90       	pop	r1
 386:	18 95       	reti

00000388 <__vector_21>:

ISR(ADC_vect)
{
 388:	1f 92       	push	r1
 38a:	0f 92       	push	r0
 38c:	0f b6       	in	r0, 0x3f	; 63
 38e:	0f 92       	push	r0
 390:	11 24       	eor	r1, r1
 392:	8f 93       	push	r24
	mode = MODE_MEASURE;
 394:	81 e0       	ldi	r24, 0x01	; 1
 396:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <mode>
 39a:	8f 91       	pop	r24
 39c:	0f 90       	pop	r0
 39e:	0f be       	out	0x3f, r0	; 63
 3a0:	0f 90       	pop	r0
 3a2:	1f 90       	pop	r1
 3a4:	18 95       	reti

000003a6 <ADC_0_init>:
}

uint8_t ADC_0_is_conversion_done()
{
	return ((ADCSRA & (1 << ADIF)));
}
 3a6:	80 e4       	ldi	r24, 0x40	; 64
 3a8:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 3ac:	8f ea       	ldi	r24, 0xAF	; 175
 3ae:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 3b2:	83 e0       	ldi	r24, 0x03	; 3
 3b4:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
 3b8:	80 e0       	ldi	r24, 0x00	; 0
 3ba:	08 95       	ret

000003bc <ADC_0_clear_interrupt_flag>:
 3bc:	ea e7       	ldi	r30, 0x7A	; 122
 3be:	f0 e0       	ldi	r31, 0x00	; 0
 3c0:	80 81       	ld	r24, Z
 3c2:	80 61       	ori	r24, 0x10	; 16
 3c4:	80 83       	st	Z, r24
 3c6:	08 95       	ret

000003c8 <ADC_0_select_channel>:
 3c8:	ec e7       	ldi	r30, 0x7C	; 124
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	90 81       	ld	r25, Z
 3ce:	90 7f       	andi	r25, 0xF0	; 240
 3d0:	8f 70       	andi	r24, 0x0F	; 15
 3d2:	89 2b       	or	r24, r25
 3d4:	80 83       	st	Z, r24
 3d6:	08 95       	ret

000003d8 <ADC_0_get_conversion_result>:

uint16_t ADC_0_get_conversion_result()
{
	ADC_0_clear_interrupt_flag();
 3d8:	0e 94 de 01 	call	0x3bc	; 0x3bc <ADC_0_clear_interrupt_flag>
	return (ADCL | ADCH << 8);
 3dc:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 3e0:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 3e4:	90 e0       	ldi	r25, 0x00	; 0
}
 3e6:	92 2b       	or	r25, r18
 3e8:	08 95       	ret

000003ea <device_init>:

#include <setup.h>

void device_init()
{
	TIMER_0_init();
 3ea:	0e 94 15 02 	call	0x42a	; 0x42a <TIMER_0_init>
	ADC_0_init();
 3ee:	0e 94 d3 01 	call	0x3a6	; 0x3a6 <ADC_0_init>
	USART_0_init();
 3f2:	0e 94 23 02 	call	0x446	; 0x446 <USART_0_init>
	SPI_0_init();
 3f6:	0e 94 05 02 	call	0x40a	; 0x40a <SPI_0_init>
 3fa:	08 95       	ret

000003fc <i_o_init>:
}

void i_o_init()
{
	DDRC |= (1 << TIMER_OUT);
 3fc:	3d 9a       	sbi	0x07, 5	; 7
	DDRC |= (1 << INSTRUMENTATION_OUT);
 3fe:	3c 9a       	sbi	0x07, 4	; 7
	DDRD |= (1 << DISPLAY_DIGIT_TENTHS);
 400:	54 9a       	sbi	0x0a, 4	; 10
	DDRD |= (1 << DISPLAY_DIGIT_ONES);
 402:	55 9a       	sbi	0x0a, 5	; 10
	DDRD |= (1 << DISPLAY_DIGIT_TENS);
 404:	56 9a       	sbi	0x0a, 6	; 10
	DDRD |= (1 << DISPLAY_CLR);
 406:	57 9a       	sbi	0x0a, 7	; 10
 408:	08 95       	ret

0000040a <SPI_0_init>:
	SPCR |= (1 << SPE);
}

void SPI_0_disable()
{
	SPCR &= ~(1 << SPE);
 40a:	8c e2       	ldi	r24, 0x2C	; 44
 40c:	84 b9       	out	0x04, r24	; 4
 40e:	e4 e6       	ldi	r30, 0x64	; 100
 410:	f0 e0       	ldi	r31, 0x00	; 0
 412:	80 81       	ld	r24, Z
 414:	8b 7f       	andi	r24, 0xFB	; 251
 416:	80 83       	st	Z, r24
 418:	80 e5       	ldi	r24, 0x50	; 80
 41a:	8c bd       	out	0x2c, r24	; 44
 41c:	1d bc       	out	0x2d, r1	; 45
 41e:	08 95       	ret

00000420 <SPI_0_write>:
}

void SPI_0_write(uint8_t data)
{
	SPDR = data;
 420:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF) ));	/* Wait until transmission complete */
 422:	0d b4       	in	r0, 0x2d	; 45
 424:	07 fe       	sbrs	r0, 7
 426:	fd cf       	rjmp	.-6      	; 0x422 <SPI_0_write+0x2>
 428:	08 95       	ret

0000042a <TIMER_0_init>:
 */ 
#include <TC_0.h>

void TIMER_0_init(void)
{
	TCCR0A |= (1 << WGM01); // Mode 2, Clear on Timer Compare
 42a:	84 b5       	in	r24, 0x24	; 36
 42c:	82 60       	ori	r24, 0x02	; 2
 42e:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS01) | (1 << CS00); // Prescaler set to clk/64
 430:	85 b5       	in	r24, 0x25	; 37
 432:	83 60       	ori	r24, 0x03	; 3
 434:	85 bd       	out	0x25, r24	; 37
	//OCR0A = 103; // 2.4 kHz @ 16 MHz system clock
	OCR0A = 129; // 2.4 kHz @ 20 MHz system clock
 436:	81 e8       	ldi	r24, 0x81	; 129
 438:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);	// Compare A Match Interrupt Enable
 43a:	ee e6       	ldi	r30, 0x6E	; 110
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	80 81       	ld	r24, Z
 440:	82 60       	ori	r24, 0x02	; 2
 442:	80 83       	st	Z, r24
 444:	08 95       	ret

00000446 <USART_0_init>:
	
	#define BAUD 115200
	#include <util/setbaud.h>
	
	/* Enable USART0 */
	PRR &= ~(1 << PRUSART0);
 446:	e4 e6       	ldi	r30, 0x64	; 100
 448:	f0 e0       	ldi	r31, 0x00	; 0
 44a:	80 81       	ld	r24, Z
 44c:	8d 7f       	andi	r24, 0xFD	; 253
 44e:	80 83       	st	Z, r24
	
	UBRR0H = UBRRH_VALUE;
 450:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
 454:	80 e1       	ldi	r24, 0x10	; 16
 456:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	UCSR0A = USE_2X << U2X0 /*  */
 45a:	82 e0       	ldi	r24, 0x02	; 2
 45c:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
			| (0 << MPCM0);  /* Multi-processor Communication Mode: disabled */

	UCSR0B =  (1 << RXCIE0)    /* RX Complete Interrupt Enable: enabled */
 460:	88 e9       	ldi	r24, 0x98	; 152
 462:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	//		 | (0 << UPM01) | (0 << UPM00) /* Disabled */
	//		 | 0 << USBS0 /* USART Stop Bit Select: disabled */
	//		 | (1 << UCSZ01) | (1 << UCSZ00); /* 8-bit */

	return 0;
}
 466:	80 e0       	ldi	r24, 0x00	; 0
 468:	08 95       	ret

0000046a <__subsf3>:
 46a:	50 58       	subi	r21, 0x80	; 128

0000046c <__addsf3>:
 46c:	bb 27       	eor	r27, r27
 46e:	aa 27       	eor	r26, r26
 470:	0e 94 4d 02 	call	0x49a	; 0x49a <__addsf3x>
 474:	0c 94 25 03 	jmp	0x64a	; 0x64a <__fp_round>
 478:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_pscA>
 47c:	38 f0       	brcs	.+14     	; 0x48c <__addsf3+0x20>
 47e:	0e 94 1e 03 	call	0x63c	; 0x63c <__fp_pscB>
 482:	20 f0       	brcs	.+8      	; 0x48c <__addsf3+0x20>
 484:	39 f4       	brne	.+14     	; 0x494 <__addsf3+0x28>
 486:	9f 3f       	cpi	r25, 0xFF	; 255
 488:	19 f4       	brne	.+6      	; 0x490 <__addsf3+0x24>
 48a:	26 f4       	brtc	.+8      	; 0x494 <__addsf3+0x28>
 48c:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_nan>
 490:	0e f4       	brtc	.+2      	; 0x494 <__addsf3+0x28>
 492:	e0 95       	com	r30
 494:	e7 fb       	bst	r30, 7
 496:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_inf>

0000049a <__addsf3x>:
 49a:	e9 2f       	mov	r30, r25
 49c:	0e 94 36 03 	call	0x66c	; 0x66c <__fp_split3>
 4a0:	58 f3       	brcs	.-42     	; 0x478 <__addsf3+0xc>
 4a2:	ba 17       	cp	r27, r26
 4a4:	62 07       	cpc	r22, r18
 4a6:	73 07       	cpc	r23, r19
 4a8:	84 07       	cpc	r24, r20
 4aa:	95 07       	cpc	r25, r21
 4ac:	20 f0       	brcs	.+8      	; 0x4b6 <__addsf3x+0x1c>
 4ae:	79 f4       	brne	.+30     	; 0x4ce <__addsf3x+0x34>
 4b0:	a6 f5       	brtc	.+104    	; 0x51a <__addsf3x+0x80>
 4b2:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <__fp_zero>
 4b6:	0e f4       	brtc	.+2      	; 0x4ba <__addsf3x+0x20>
 4b8:	e0 95       	com	r30
 4ba:	0b 2e       	mov	r0, r27
 4bc:	ba 2f       	mov	r27, r26
 4be:	a0 2d       	mov	r26, r0
 4c0:	0b 01       	movw	r0, r22
 4c2:	b9 01       	movw	r22, r18
 4c4:	90 01       	movw	r18, r0
 4c6:	0c 01       	movw	r0, r24
 4c8:	ca 01       	movw	r24, r20
 4ca:	a0 01       	movw	r20, r0
 4cc:	11 24       	eor	r1, r1
 4ce:	ff 27       	eor	r31, r31
 4d0:	59 1b       	sub	r21, r25
 4d2:	99 f0       	breq	.+38     	; 0x4fa <__addsf3x+0x60>
 4d4:	59 3f       	cpi	r21, 0xF9	; 249
 4d6:	50 f4       	brcc	.+20     	; 0x4ec <__addsf3x+0x52>
 4d8:	50 3e       	cpi	r21, 0xE0	; 224
 4da:	68 f1       	brcs	.+90     	; 0x536 <__addsf3x+0x9c>
 4dc:	1a 16       	cp	r1, r26
 4de:	f0 40       	sbci	r31, 0x00	; 0
 4e0:	a2 2f       	mov	r26, r18
 4e2:	23 2f       	mov	r18, r19
 4e4:	34 2f       	mov	r19, r20
 4e6:	44 27       	eor	r20, r20
 4e8:	58 5f       	subi	r21, 0xF8	; 248
 4ea:	f3 cf       	rjmp	.-26     	; 0x4d2 <__addsf3x+0x38>
 4ec:	46 95       	lsr	r20
 4ee:	37 95       	ror	r19
 4f0:	27 95       	ror	r18
 4f2:	a7 95       	ror	r26
 4f4:	f0 40       	sbci	r31, 0x00	; 0
 4f6:	53 95       	inc	r21
 4f8:	c9 f7       	brne	.-14     	; 0x4ec <__addsf3x+0x52>
 4fa:	7e f4       	brtc	.+30     	; 0x51a <__addsf3x+0x80>
 4fc:	1f 16       	cp	r1, r31
 4fe:	ba 0b       	sbc	r27, r26
 500:	62 0b       	sbc	r22, r18
 502:	73 0b       	sbc	r23, r19
 504:	84 0b       	sbc	r24, r20
 506:	ba f0       	brmi	.+46     	; 0x536 <__addsf3x+0x9c>
 508:	91 50       	subi	r25, 0x01	; 1
 50a:	a1 f0       	breq	.+40     	; 0x534 <__addsf3x+0x9a>
 50c:	ff 0f       	add	r31, r31
 50e:	bb 1f       	adc	r27, r27
 510:	66 1f       	adc	r22, r22
 512:	77 1f       	adc	r23, r23
 514:	88 1f       	adc	r24, r24
 516:	c2 f7       	brpl	.-16     	; 0x508 <__addsf3x+0x6e>
 518:	0e c0       	rjmp	.+28     	; 0x536 <__addsf3x+0x9c>
 51a:	ba 0f       	add	r27, r26
 51c:	62 1f       	adc	r22, r18
 51e:	73 1f       	adc	r23, r19
 520:	84 1f       	adc	r24, r20
 522:	48 f4       	brcc	.+18     	; 0x536 <__addsf3x+0x9c>
 524:	87 95       	ror	r24
 526:	77 95       	ror	r23
 528:	67 95       	ror	r22
 52a:	b7 95       	ror	r27
 52c:	f7 95       	ror	r31
 52e:	9e 3f       	cpi	r25, 0xFE	; 254
 530:	08 f0       	brcs	.+2      	; 0x534 <__addsf3x+0x9a>
 532:	b0 cf       	rjmp	.-160    	; 0x494 <__addsf3+0x28>
 534:	93 95       	inc	r25
 536:	88 0f       	add	r24, r24
 538:	08 f0       	brcs	.+2      	; 0x53c <__addsf3x+0xa2>
 53a:	99 27       	eor	r25, r25
 53c:	ee 0f       	add	r30, r30
 53e:	97 95       	ror	r25
 540:	87 95       	ror	r24
 542:	08 95       	ret

00000544 <__fixunssfsi>:
 544:	0e 94 3e 03 	call	0x67c	; 0x67c <__fp_splitA>
 548:	88 f0       	brcs	.+34     	; 0x56c <__fixunssfsi+0x28>
 54a:	9f 57       	subi	r25, 0x7F	; 127
 54c:	98 f0       	brcs	.+38     	; 0x574 <__fixunssfsi+0x30>
 54e:	b9 2f       	mov	r27, r25
 550:	99 27       	eor	r25, r25
 552:	b7 51       	subi	r27, 0x17	; 23
 554:	b0 f0       	brcs	.+44     	; 0x582 <__fixunssfsi+0x3e>
 556:	e1 f0       	breq	.+56     	; 0x590 <__fixunssfsi+0x4c>
 558:	66 0f       	add	r22, r22
 55a:	77 1f       	adc	r23, r23
 55c:	88 1f       	adc	r24, r24
 55e:	99 1f       	adc	r25, r25
 560:	1a f0       	brmi	.+6      	; 0x568 <__fixunssfsi+0x24>
 562:	ba 95       	dec	r27
 564:	c9 f7       	brne	.-14     	; 0x558 <__fixunssfsi+0x14>
 566:	14 c0       	rjmp	.+40     	; 0x590 <__fixunssfsi+0x4c>
 568:	b1 30       	cpi	r27, 0x01	; 1
 56a:	91 f0       	breq	.+36     	; 0x590 <__fixunssfsi+0x4c>
 56c:	0e 94 58 03 	call	0x6b0	; 0x6b0 <__fp_zero>
 570:	b1 e0       	ldi	r27, 0x01	; 1
 572:	08 95       	ret
 574:	0c 94 58 03 	jmp	0x6b0	; 0x6b0 <__fp_zero>
 578:	67 2f       	mov	r22, r23
 57a:	78 2f       	mov	r23, r24
 57c:	88 27       	eor	r24, r24
 57e:	b8 5f       	subi	r27, 0xF8	; 248
 580:	39 f0       	breq	.+14     	; 0x590 <__fixunssfsi+0x4c>
 582:	b9 3f       	cpi	r27, 0xF9	; 249
 584:	cc f3       	brlt	.-14     	; 0x578 <__fixunssfsi+0x34>
 586:	86 95       	lsr	r24
 588:	77 95       	ror	r23
 58a:	67 95       	ror	r22
 58c:	b3 95       	inc	r27
 58e:	d9 f7       	brne	.-10     	; 0x586 <__fixunssfsi+0x42>
 590:	3e f4       	brtc	.+14     	; 0x5a0 <__fixunssfsi+0x5c>
 592:	90 95       	com	r25
 594:	80 95       	com	r24
 596:	70 95       	com	r23
 598:	61 95       	neg	r22
 59a:	7f 4f       	sbci	r23, 0xFF	; 255
 59c:	8f 4f       	sbci	r24, 0xFF	; 255
 59e:	9f 4f       	sbci	r25, 0xFF	; 255
 5a0:	08 95       	ret

000005a2 <__floatunsisf>:
 5a2:	e8 94       	clt
 5a4:	09 c0       	rjmp	.+18     	; 0x5b8 <__floatsisf+0x12>

000005a6 <__floatsisf>:
 5a6:	97 fb       	bst	r25, 7
 5a8:	3e f4       	brtc	.+14     	; 0x5b8 <__floatsisf+0x12>
 5aa:	90 95       	com	r25
 5ac:	80 95       	com	r24
 5ae:	70 95       	com	r23
 5b0:	61 95       	neg	r22
 5b2:	7f 4f       	sbci	r23, 0xFF	; 255
 5b4:	8f 4f       	sbci	r24, 0xFF	; 255
 5b6:	9f 4f       	sbci	r25, 0xFF	; 255
 5b8:	99 23       	and	r25, r25
 5ba:	a9 f0       	breq	.+42     	; 0x5e6 <__floatsisf+0x40>
 5bc:	f9 2f       	mov	r31, r25
 5be:	96 e9       	ldi	r25, 0x96	; 150
 5c0:	bb 27       	eor	r27, r27
 5c2:	93 95       	inc	r25
 5c4:	f6 95       	lsr	r31
 5c6:	87 95       	ror	r24
 5c8:	77 95       	ror	r23
 5ca:	67 95       	ror	r22
 5cc:	b7 95       	ror	r27
 5ce:	f1 11       	cpse	r31, r1
 5d0:	f8 cf       	rjmp	.-16     	; 0x5c2 <__floatsisf+0x1c>
 5d2:	fa f4       	brpl	.+62     	; 0x612 <__floatsisf+0x6c>
 5d4:	bb 0f       	add	r27, r27
 5d6:	11 f4       	brne	.+4      	; 0x5dc <__floatsisf+0x36>
 5d8:	60 ff       	sbrs	r22, 0
 5da:	1b c0       	rjmp	.+54     	; 0x612 <__floatsisf+0x6c>
 5dc:	6f 5f       	subi	r22, 0xFF	; 255
 5de:	7f 4f       	sbci	r23, 0xFF	; 255
 5e0:	8f 4f       	sbci	r24, 0xFF	; 255
 5e2:	9f 4f       	sbci	r25, 0xFF	; 255
 5e4:	16 c0       	rjmp	.+44     	; 0x612 <__floatsisf+0x6c>
 5e6:	88 23       	and	r24, r24
 5e8:	11 f0       	breq	.+4      	; 0x5ee <__floatsisf+0x48>
 5ea:	96 e9       	ldi	r25, 0x96	; 150
 5ec:	11 c0       	rjmp	.+34     	; 0x610 <__floatsisf+0x6a>
 5ee:	77 23       	and	r23, r23
 5f0:	21 f0       	breq	.+8      	; 0x5fa <__floatsisf+0x54>
 5f2:	9e e8       	ldi	r25, 0x8E	; 142
 5f4:	87 2f       	mov	r24, r23
 5f6:	76 2f       	mov	r23, r22
 5f8:	05 c0       	rjmp	.+10     	; 0x604 <__floatsisf+0x5e>
 5fa:	66 23       	and	r22, r22
 5fc:	71 f0       	breq	.+28     	; 0x61a <__floatsisf+0x74>
 5fe:	96 e8       	ldi	r25, 0x86	; 134
 600:	86 2f       	mov	r24, r22
 602:	70 e0       	ldi	r23, 0x00	; 0
 604:	60 e0       	ldi	r22, 0x00	; 0
 606:	2a f0       	brmi	.+10     	; 0x612 <__floatsisf+0x6c>
 608:	9a 95       	dec	r25
 60a:	66 0f       	add	r22, r22
 60c:	77 1f       	adc	r23, r23
 60e:	88 1f       	adc	r24, r24
 610:	da f7       	brpl	.-10     	; 0x608 <__floatsisf+0x62>
 612:	88 0f       	add	r24, r24
 614:	96 95       	lsr	r25
 616:	87 95       	ror	r24
 618:	97 f9       	bld	r25, 7
 61a:	08 95       	ret

0000061c <__fp_inf>:
 61c:	97 f9       	bld	r25, 7
 61e:	9f 67       	ori	r25, 0x7F	; 127
 620:	80 e8       	ldi	r24, 0x80	; 128
 622:	70 e0       	ldi	r23, 0x00	; 0
 624:	60 e0       	ldi	r22, 0x00	; 0
 626:	08 95       	ret

00000628 <__fp_nan>:
 628:	9f ef       	ldi	r25, 0xFF	; 255
 62a:	80 ec       	ldi	r24, 0xC0	; 192
 62c:	08 95       	ret

0000062e <__fp_pscA>:
 62e:	00 24       	eor	r0, r0
 630:	0a 94       	dec	r0
 632:	16 16       	cp	r1, r22
 634:	17 06       	cpc	r1, r23
 636:	18 06       	cpc	r1, r24
 638:	09 06       	cpc	r0, r25
 63a:	08 95       	ret

0000063c <__fp_pscB>:
 63c:	00 24       	eor	r0, r0
 63e:	0a 94       	dec	r0
 640:	12 16       	cp	r1, r18
 642:	13 06       	cpc	r1, r19
 644:	14 06       	cpc	r1, r20
 646:	05 06       	cpc	r0, r21
 648:	08 95       	ret

0000064a <__fp_round>:
 64a:	09 2e       	mov	r0, r25
 64c:	03 94       	inc	r0
 64e:	00 0c       	add	r0, r0
 650:	11 f4       	brne	.+4      	; 0x656 <__fp_round+0xc>
 652:	88 23       	and	r24, r24
 654:	52 f0       	brmi	.+20     	; 0x66a <__fp_round+0x20>
 656:	bb 0f       	add	r27, r27
 658:	40 f4       	brcc	.+16     	; 0x66a <__fp_round+0x20>
 65a:	bf 2b       	or	r27, r31
 65c:	11 f4       	brne	.+4      	; 0x662 <__fp_round+0x18>
 65e:	60 ff       	sbrs	r22, 0
 660:	04 c0       	rjmp	.+8      	; 0x66a <__fp_round+0x20>
 662:	6f 5f       	subi	r22, 0xFF	; 255
 664:	7f 4f       	sbci	r23, 0xFF	; 255
 666:	8f 4f       	sbci	r24, 0xFF	; 255
 668:	9f 4f       	sbci	r25, 0xFF	; 255
 66a:	08 95       	ret

0000066c <__fp_split3>:
 66c:	57 fd       	sbrc	r21, 7
 66e:	90 58       	subi	r25, 0x80	; 128
 670:	44 0f       	add	r20, r20
 672:	55 1f       	adc	r21, r21
 674:	59 f0       	breq	.+22     	; 0x68c <__fp_splitA+0x10>
 676:	5f 3f       	cpi	r21, 0xFF	; 255
 678:	71 f0       	breq	.+28     	; 0x696 <__fp_splitA+0x1a>
 67a:	47 95       	ror	r20

0000067c <__fp_splitA>:
 67c:	88 0f       	add	r24, r24
 67e:	97 fb       	bst	r25, 7
 680:	99 1f       	adc	r25, r25
 682:	61 f0       	breq	.+24     	; 0x69c <__fp_splitA+0x20>
 684:	9f 3f       	cpi	r25, 0xFF	; 255
 686:	79 f0       	breq	.+30     	; 0x6a6 <__fp_splitA+0x2a>
 688:	87 95       	ror	r24
 68a:	08 95       	ret
 68c:	12 16       	cp	r1, r18
 68e:	13 06       	cpc	r1, r19
 690:	14 06       	cpc	r1, r20
 692:	55 1f       	adc	r21, r21
 694:	f2 cf       	rjmp	.-28     	; 0x67a <__fp_split3+0xe>
 696:	46 95       	lsr	r20
 698:	f1 df       	rcall	.-30     	; 0x67c <__fp_splitA>
 69a:	08 c0       	rjmp	.+16     	; 0x6ac <__fp_splitA+0x30>
 69c:	16 16       	cp	r1, r22
 69e:	17 06       	cpc	r1, r23
 6a0:	18 06       	cpc	r1, r24
 6a2:	99 1f       	adc	r25, r25
 6a4:	f1 cf       	rjmp	.-30     	; 0x688 <__fp_splitA+0xc>
 6a6:	86 95       	lsr	r24
 6a8:	71 05       	cpc	r23, r1
 6aa:	61 05       	cpc	r22, r1
 6ac:	08 94       	sec
 6ae:	08 95       	ret

000006b0 <__fp_zero>:
 6b0:	e8 94       	clt

000006b2 <__fp_szero>:
 6b2:	bb 27       	eor	r27, r27
 6b4:	66 27       	eor	r22, r22
 6b6:	77 27       	eor	r23, r23
 6b8:	cb 01       	movw	r24, r22
 6ba:	97 f9       	bld	r25, 7
 6bc:	08 95       	ret

000006be <__mulsf3>:
 6be:	0e 94 72 03 	call	0x6e4	; 0x6e4 <__mulsf3x>
 6c2:	0c 94 25 03 	jmp	0x64a	; 0x64a <__fp_round>
 6c6:	0e 94 17 03 	call	0x62e	; 0x62e <__fp_pscA>
 6ca:	38 f0       	brcs	.+14     	; 0x6da <__mulsf3+0x1c>
 6cc:	0e 94 1e 03 	call	0x63c	; 0x63c <__fp_pscB>
 6d0:	20 f0       	brcs	.+8      	; 0x6da <__mulsf3+0x1c>
 6d2:	95 23       	and	r25, r21
 6d4:	11 f0       	breq	.+4      	; 0x6da <__mulsf3+0x1c>
 6d6:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_inf>
 6da:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_nan>
 6de:	11 24       	eor	r1, r1
 6e0:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_szero>

000006e4 <__mulsf3x>:
 6e4:	0e 94 36 03 	call	0x66c	; 0x66c <__fp_split3>
 6e8:	70 f3       	brcs	.-36     	; 0x6c6 <__mulsf3+0x8>

000006ea <__mulsf3_pse>:
 6ea:	95 9f       	mul	r25, r21
 6ec:	c1 f3       	breq	.-16     	; 0x6de <__mulsf3+0x20>
 6ee:	95 0f       	add	r25, r21
 6f0:	50 e0       	ldi	r21, 0x00	; 0
 6f2:	55 1f       	adc	r21, r21
 6f4:	62 9f       	mul	r22, r18
 6f6:	f0 01       	movw	r30, r0
 6f8:	72 9f       	mul	r23, r18
 6fa:	bb 27       	eor	r27, r27
 6fc:	f0 0d       	add	r31, r0
 6fe:	b1 1d       	adc	r27, r1
 700:	63 9f       	mul	r22, r19
 702:	aa 27       	eor	r26, r26
 704:	f0 0d       	add	r31, r0
 706:	b1 1d       	adc	r27, r1
 708:	aa 1f       	adc	r26, r26
 70a:	64 9f       	mul	r22, r20
 70c:	66 27       	eor	r22, r22
 70e:	b0 0d       	add	r27, r0
 710:	a1 1d       	adc	r26, r1
 712:	66 1f       	adc	r22, r22
 714:	82 9f       	mul	r24, r18
 716:	22 27       	eor	r18, r18
 718:	b0 0d       	add	r27, r0
 71a:	a1 1d       	adc	r26, r1
 71c:	62 1f       	adc	r22, r18
 71e:	73 9f       	mul	r23, r19
 720:	b0 0d       	add	r27, r0
 722:	a1 1d       	adc	r26, r1
 724:	62 1f       	adc	r22, r18
 726:	83 9f       	mul	r24, r19
 728:	a0 0d       	add	r26, r0
 72a:	61 1d       	adc	r22, r1
 72c:	22 1f       	adc	r18, r18
 72e:	74 9f       	mul	r23, r20
 730:	33 27       	eor	r19, r19
 732:	a0 0d       	add	r26, r0
 734:	61 1d       	adc	r22, r1
 736:	23 1f       	adc	r18, r19
 738:	84 9f       	mul	r24, r20
 73a:	60 0d       	add	r22, r0
 73c:	21 1d       	adc	r18, r1
 73e:	82 2f       	mov	r24, r18
 740:	76 2f       	mov	r23, r22
 742:	6a 2f       	mov	r22, r26
 744:	11 24       	eor	r1, r1
 746:	9f 57       	subi	r25, 0x7F	; 127
 748:	50 40       	sbci	r21, 0x00	; 0
 74a:	9a f0       	brmi	.+38     	; 0x772 <__mulsf3_pse+0x88>
 74c:	f1 f0       	breq	.+60     	; 0x78a <__mulsf3_pse+0xa0>
 74e:	88 23       	and	r24, r24
 750:	4a f0       	brmi	.+18     	; 0x764 <__mulsf3_pse+0x7a>
 752:	ee 0f       	add	r30, r30
 754:	ff 1f       	adc	r31, r31
 756:	bb 1f       	adc	r27, r27
 758:	66 1f       	adc	r22, r22
 75a:	77 1f       	adc	r23, r23
 75c:	88 1f       	adc	r24, r24
 75e:	91 50       	subi	r25, 0x01	; 1
 760:	50 40       	sbci	r21, 0x00	; 0
 762:	a9 f7       	brne	.-22     	; 0x74e <__mulsf3_pse+0x64>
 764:	9e 3f       	cpi	r25, 0xFE	; 254
 766:	51 05       	cpc	r21, r1
 768:	80 f0       	brcs	.+32     	; 0x78a <__mulsf3_pse+0xa0>
 76a:	0c 94 0e 03 	jmp	0x61c	; 0x61c <__fp_inf>
 76e:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_szero>
 772:	5f 3f       	cpi	r21, 0xFF	; 255
 774:	e4 f3       	brlt	.-8      	; 0x76e <__mulsf3_pse+0x84>
 776:	98 3e       	cpi	r25, 0xE8	; 232
 778:	d4 f3       	brlt	.-12     	; 0x76e <__mulsf3_pse+0x84>
 77a:	86 95       	lsr	r24
 77c:	77 95       	ror	r23
 77e:	67 95       	ror	r22
 780:	b7 95       	ror	r27
 782:	f7 95       	ror	r31
 784:	e7 95       	ror	r30
 786:	9f 5f       	subi	r25, 0xFF	; 255
 788:	c1 f7       	brne	.-16     	; 0x77a <__mulsf3_pse+0x90>
 78a:	fe 2b       	or	r31, r30
 78c:	88 0f       	add	r24, r24
 78e:	91 1d       	adc	r25, r1
 790:	96 95       	lsr	r25
 792:	87 95       	ror	r24
 794:	97 f9       	bld	r25, 7
 796:	08 95       	ret

00000798 <round>:
 798:	0e 94 3e 03 	call	0x67c	; 0x67c <__fp_splitA>
 79c:	e8 f0       	brcs	.+58     	; 0x7d8 <round+0x40>
 79e:	9e 37       	cpi	r25, 0x7E	; 126
 7a0:	e8 f0       	brcs	.+58     	; 0x7dc <round+0x44>
 7a2:	96 39       	cpi	r25, 0x96	; 150
 7a4:	b8 f4       	brcc	.+46     	; 0x7d4 <round+0x3c>
 7a6:	9e 38       	cpi	r25, 0x8E	; 142
 7a8:	48 f4       	brcc	.+18     	; 0x7bc <round+0x24>
 7aa:	67 2f       	mov	r22, r23
 7ac:	78 2f       	mov	r23, r24
 7ae:	88 27       	eor	r24, r24
 7b0:	98 5f       	subi	r25, 0xF8	; 248
 7b2:	f9 cf       	rjmp	.-14     	; 0x7a6 <round+0xe>
 7b4:	86 95       	lsr	r24
 7b6:	77 95       	ror	r23
 7b8:	67 95       	ror	r22
 7ba:	93 95       	inc	r25
 7bc:	95 39       	cpi	r25, 0x95	; 149
 7be:	d0 f3       	brcs	.-12     	; 0x7b4 <round+0x1c>
 7c0:	b6 2f       	mov	r27, r22
 7c2:	b1 70       	andi	r27, 0x01	; 1
 7c4:	6b 0f       	add	r22, r27
 7c6:	71 1d       	adc	r23, r1
 7c8:	81 1d       	adc	r24, r1
 7ca:	20 f4       	brcc	.+8      	; 0x7d4 <round+0x3c>
 7cc:	87 95       	ror	r24
 7ce:	77 95       	ror	r23
 7d0:	67 95       	ror	r22
 7d2:	93 95       	inc	r25
 7d4:	0c 94 36 04 	jmp	0x86c	; 0x86c <__fp_mintl>
 7d8:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__fp_mpack>
 7dc:	0c 94 59 03 	jmp	0x6b2	; 0x6b2 <__fp_szero>
 7e0:	19 f4       	brne	.+6      	; 0x7e8 <round+0x50>
 7e2:	16 f4       	brtc	.+4      	; 0x7e8 <round+0x50>
 7e4:	0c 94 14 03 	jmp	0x628	; 0x628 <__fp_nan>
 7e8:	0c 94 51 04 	jmp	0x8a2	; 0x8a2 <__fp_mpack>

000007ec <sqrt>:
 7ec:	0e 94 3e 03 	call	0x67c	; 0x67c <__fp_splitA>
 7f0:	b8 f3       	brcs	.-18     	; 0x7e0 <round+0x48>
 7f2:	99 23       	and	r25, r25
 7f4:	c9 f3       	breq	.-14     	; 0x7e8 <round+0x50>
 7f6:	b6 f3       	brts	.-20     	; 0x7e4 <round+0x4c>
 7f8:	9f 57       	subi	r25, 0x7F	; 127
 7fa:	55 0b       	sbc	r21, r21
 7fc:	87 ff       	sbrs	r24, 7
 7fe:	0e 94 5f 04 	call	0x8be	; 0x8be <__fp_norm2>
 802:	00 24       	eor	r0, r0
 804:	a0 e6       	ldi	r26, 0x60	; 96
 806:	40 ea       	ldi	r20, 0xA0	; 160
 808:	90 01       	movw	r18, r0
 80a:	80 58       	subi	r24, 0x80	; 128
 80c:	56 95       	lsr	r21
 80e:	97 95       	ror	r25
 810:	28 f4       	brcc	.+10     	; 0x81c <sqrt+0x30>
 812:	80 5c       	subi	r24, 0xC0	; 192
 814:	66 0f       	add	r22, r22
 816:	77 1f       	adc	r23, r23
 818:	88 1f       	adc	r24, r24
 81a:	20 f0       	brcs	.+8      	; 0x824 <sqrt+0x38>
 81c:	26 17       	cp	r18, r22
 81e:	37 07       	cpc	r19, r23
 820:	48 07       	cpc	r20, r24
 822:	30 f4       	brcc	.+12     	; 0x830 <sqrt+0x44>
 824:	62 1b       	sub	r22, r18
 826:	73 0b       	sbc	r23, r19
 828:	84 0b       	sbc	r24, r20
 82a:	20 29       	or	r18, r0
 82c:	31 29       	or	r19, r1
 82e:	4a 2b       	or	r20, r26
 830:	a6 95       	lsr	r26
 832:	17 94       	ror	r1
 834:	07 94       	ror	r0
 836:	20 25       	eor	r18, r0
 838:	31 25       	eor	r19, r1
 83a:	4a 27       	eor	r20, r26
 83c:	58 f7       	brcc	.-42     	; 0x814 <sqrt+0x28>
 83e:	66 0f       	add	r22, r22
 840:	77 1f       	adc	r23, r23
 842:	88 1f       	adc	r24, r24
 844:	20 f0       	brcs	.+8      	; 0x84e <sqrt+0x62>
 846:	26 17       	cp	r18, r22
 848:	37 07       	cpc	r19, r23
 84a:	48 07       	cpc	r20, r24
 84c:	30 f4       	brcc	.+12     	; 0x85a <sqrt+0x6e>
 84e:	62 0b       	sbc	r22, r18
 850:	73 0b       	sbc	r23, r19
 852:	84 0b       	sbc	r24, r20
 854:	20 0d       	add	r18, r0
 856:	31 1d       	adc	r19, r1
 858:	41 1d       	adc	r20, r1
 85a:	a0 95       	com	r26
 85c:	81 f7       	brne	.-32     	; 0x83e <sqrt+0x52>
 85e:	b9 01       	movw	r22, r18
 860:	84 2f       	mov	r24, r20
 862:	91 58       	subi	r25, 0x81	; 129
 864:	88 0f       	add	r24, r24
 866:	96 95       	lsr	r25
 868:	87 95       	ror	r24
 86a:	08 95       	ret

0000086c <__fp_mintl>:
 86c:	88 23       	and	r24, r24
 86e:	71 f4       	brne	.+28     	; 0x88c <__fp_mintl+0x20>
 870:	77 23       	and	r23, r23
 872:	21 f0       	breq	.+8      	; 0x87c <__fp_mintl+0x10>
 874:	98 50       	subi	r25, 0x08	; 8
 876:	87 2b       	or	r24, r23
 878:	76 2f       	mov	r23, r22
 87a:	07 c0       	rjmp	.+14     	; 0x88a <__fp_mintl+0x1e>
 87c:	66 23       	and	r22, r22
 87e:	11 f4       	brne	.+4      	; 0x884 <__fp_mintl+0x18>
 880:	99 27       	eor	r25, r25
 882:	0d c0       	rjmp	.+26     	; 0x89e <__fp_mintl+0x32>
 884:	90 51       	subi	r25, 0x10	; 16
 886:	86 2b       	or	r24, r22
 888:	70 e0       	ldi	r23, 0x00	; 0
 88a:	60 e0       	ldi	r22, 0x00	; 0
 88c:	2a f0       	brmi	.+10     	; 0x898 <__fp_mintl+0x2c>
 88e:	9a 95       	dec	r25
 890:	66 0f       	add	r22, r22
 892:	77 1f       	adc	r23, r23
 894:	88 1f       	adc	r24, r24
 896:	da f7       	brpl	.-10     	; 0x88e <__fp_mintl+0x22>
 898:	88 0f       	add	r24, r24
 89a:	96 95       	lsr	r25
 89c:	87 95       	ror	r24
 89e:	97 f9       	bld	r25, 7
 8a0:	08 95       	ret

000008a2 <__fp_mpack>:
 8a2:	9f 3f       	cpi	r25, 0xFF	; 255
 8a4:	31 f0       	breq	.+12     	; 0x8b2 <__fp_mpack_finite+0xc>

000008a6 <__fp_mpack_finite>:
 8a6:	91 50       	subi	r25, 0x01	; 1
 8a8:	20 f4       	brcc	.+8      	; 0x8b2 <__fp_mpack_finite+0xc>
 8aa:	87 95       	ror	r24
 8ac:	77 95       	ror	r23
 8ae:	67 95       	ror	r22
 8b0:	b7 95       	ror	r27
 8b2:	88 0f       	add	r24, r24
 8b4:	91 1d       	adc	r25, r1
 8b6:	96 95       	lsr	r25
 8b8:	87 95       	ror	r24
 8ba:	97 f9       	bld	r25, 7
 8bc:	08 95       	ret

000008be <__fp_norm2>:
 8be:	91 50       	subi	r25, 0x01	; 1
 8c0:	50 40       	sbci	r21, 0x00	; 0
 8c2:	66 0f       	add	r22, r22
 8c4:	77 1f       	adc	r23, r23
 8c6:	88 1f       	adc	r24, r24
 8c8:	d2 f7       	brpl	.-12     	; 0x8be <__fp_norm2>
 8ca:	08 95       	ret

000008cc <__udivmodsi4>:
 8cc:	a1 e2       	ldi	r26, 0x21	; 33
 8ce:	1a 2e       	mov	r1, r26
 8d0:	aa 1b       	sub	r26, r26
 8d2:	bb 1b       	sub	r27, r27
 8d4:	fd 01       	movw	r30, r26
 8d6:	0d c0       	rjmp	.+26     	; 0x8f2 <__udivmodsi4_ep>

000008d8 <__udivmodsi4_loop>:
 8d8:	aa 1f       	adc	r26, r26
 8da:	bb 1f       	adc	r27, r27
 8dc:	ee 1f       	adc	r30, r30
 8de:	ff 1f       	adc	r31, r31
 8e0:	a2 17       	cp	r26, r18
 8e2:	b3 07       	cpc	r27, r19
 8e4:	e4 07       	cpc	r30, r20
 8e6:	f5 07       	cpc	r31, r21
 8e8:	20 f0       	brcs	.+8      	; 0x8f2 <__udivmodsi4_ep>
 8ea:	a2 1b       	sub	r26, r18
 8ec:	b3 0b       	sbc	r27, r19
 8ee:	e4 0b       	sbc	r30, r20
 8f0:	f5 0b       	sbc	r31, r21

000008f2 <__udivmodsi4_ep>:
 8f2:	66 1f       	adc	r22, r22
 8f4:	77 1f       	adc	r23, r23
 8f6:	88 1f       	adc	r24, r24
 8f8:	99 1f       	adc	r25, r25
 8fa:	1a 94       	dec	r1
 8fc:	69 f7       	brne	.-38     	; 0x8d8 <__udivmodsi4_loop>
 8fe:	60 95       	com	r22
 900:	70 95       	com	r23
 902:	80 95       	com	r24
 904:	90 95       	com	r25
 906:	9b 01       	movw	r18, r22
 908:	ac 01       	movw	r20, r24
 90a:	bd 01       	movw	r22, r26
 90c:	cf 01       	movw	r24, r30
 90e:	08 95       	ret

00000910 <__umulhisi3>:
 910:	a2 9f       	mul	r26, r18
 912:	b0 01       	movw	r22, r0
 914:	b3 9f       	mul	r27, r19
 916:	c0 01       	movw	r24, r0
 918:	a3 9f       	mul	r26, r19
 91a:	70 0d       	add	r23, r0
 91c:	81 1d       	adc	r24, r1
 91e:	11 24       	eor	r1, r1
 920:	91 1d       	adc	r25, r1
 922:	b2 9f       	mul	r27, r18
 924:	70 0d       	add	r23, r0
 926:	81 1d       	adc	r24, r1
 928:	11 24       	eor	r1, r1
 92a:	91 1d       	adc	r25, r1
 92c:	08 95       	ret

0000092e <_exit>:
 92e:	f8 94       	cli

00000930 <__stop_program>:
 930:	ff cf       	rjmp	.-2      	; 0x930 <__stop_program>

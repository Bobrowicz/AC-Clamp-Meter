
AC Clamp Meter.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000c  00800100  0000099e  00000a32  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000099e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010c  0080010c  00000a3e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000a3e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000a70  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000001c0  00000000  00000000  00000ab0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   000011e7  00000000  00000000  00000c70  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000b4e  00000000  00000000  00001e57  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000b3a  00000000  00000000  000029a5  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000039c  00000000  00000000  000034e0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000076b  00000000  00000000  0000387c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    0000064f  00000000  00000000  00003fe7  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000160  00000000  00000000  00004636  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 da 01 	jmp	0x3b4	; 0x3b4 <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 fa 01 	jmp	0x3f4	; 0x3f4 <__vector_21>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ee e9       	ldi	r30, 0x9E	; 158
  7c:	f9 e0       	ldi	r31, 0x09	; 9
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	ac 30       	cpi	r26, 0x0C	; 12
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	ac e0       	ldi	r26, 0x0C	; 12
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	a2 31       	cpi	r26, 0x12	; 18
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 64 01 	call	0x2c8	; 0x2c8 <main>
  9e:	0c 94 cd 04 	jmp	0x99a	; 0x99a <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <mode_measure>:
	uint8_t number_of_bytes = 2;
	for(byte = 0; byte < number_of_bytes; byte++) {
		USART_0_write((data >> (byte*8)) & 0xff);
		//SPI_0_write((data >> (byte*8)) & 0xff);
	}
}
  a6:	8f 92       	push	r8
  a8:	9f 92       	push	r9
  aa:	af 92       	push	r10
  ac:	bf 92       	push	r11
  ae:	cf 92       	push	r12
  b0:	df 92       	push	r13
  b2:	ef 92       	push	r14
  b4:	ff 92       	push	r15
  b6:	cf 93       	push	r28
  b8:	df 93       	push	r29
  ba:	ec 01       	movw	r28, r24
  bc:	0e 94 22 02 	call	0x444	; 0x444 <ADC_0_get_conversion_result>
  c0:	bc 01       	movw	r22, r24
  c2:	80 e0       	ldi	r24, 0x00	; 0
  c4:	90 e0       	ldi	r25, 0x00	; 0
  c6:	0e 94 07 03 	call	0x60e	; 0x60e <__floatunsisf>
  ca:	6b 01       	movw	r12, r22
  cc:	7c 01       	movw	r14, r24
  ce:	68 81       	ld	r22, Y
  d0:	79 81       	ldd	r23, Y+1	; 0x01
  d2:	8a 81       	ldd	r24, Y+2	; 0x02
  d4:	9b 81       	ldd	r25, Y+3	; 0x03
  d6:	0e 94 07 03 	call	0x60e	; 0x60e <__floatunsisf>
  da:	4b 01       	movw	r8, r22
  dc:	5c 01       	movw	r10, r24
  de:	a7 01       	movw	r20, r14
  e0:	96 01       	movw	r18, r12
  e2:	c7 01       	movw	r24, r14
  e4:	b6 01       	movw	r22, r12
  e6:	0e 94 95 03 	call	0x72a	; 0x72a <__mulsf3>
  ea:	9b 01       	movw	r18, r22
  ec:	ac 01       	movw	r20, r24
  ee:	c5 01       	movw	r24, r10
  f0:	b4 01       	movw	r22, r8
  f2:	0e 94 6c 02 	call	0x4d8	; 0x4d8 <__addsf3>
  f6:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fixunssfsi>
  fa:	68 83       	st	Y, r22
  fc:	79 83       	std	Y+1, r23	; 0x01
  fe:	8a 83       	std	Y+2, r24	; 0x02
 100:	9b 83       	std	Y+3, r25	; 0x03
 102:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 106:	81 50       	subi	r24, 0x01	; 1
 108:	21 f0       	breq	.+8      	; 0x112 <mode_measure+0x6c>
 10a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 10e:	80 e0       	ldi	r24, 0x00	; 0
 110:	04 c0       	rjmp	.+8      	; 0x11a <mode_measure+0x74>
 112:	88 e2       	ldi	r24, 0x28	; 40
 114:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 118:	82 e0       	ldi	r24, 0x02	; 2
 11a:	df 91       	pop	r29
 11c:	cf 91       	pop	r28
 11e:	ff 90       	pop	r15
 120:	ef 90       	pop	r14
 122:	df 90       	pop	r13
 124:	cf 90       	pop	r12
 126:	bf 90       	pop	r11
 128:	af 90       	pop	r10
 12a:	9f 90       	pop	r9
 12c:	8f 90       	pop	r8
 12e:	08 95       	ret

00000130 <mode_calculate_rms>:
 130:	cf 92       	push	r12
 132:	df 92       	push	r13
 134:	ef 92       	push	r14
 136:	ff 92       	push	r15
 138:	0f 93       	push	r16
 13a:	1f 93       	push	r17
 13c:	cf 93       	push	r28
 13e:	df 93       	push	r29
 140:	ec 01       	movw	r28, r24
 142:	8b 01       	movw	r16, r22
 144:	68 81       	ld	r22, Y
 146:	79 81       	ldd	r23, Y+1	; 0x01
 148:	8a 81       	ldd	r24, Y+2	; 0x02
 14a:	9b 81       	ldd	r25, Y+3	; 0x03
 14c:	28 e2       	ldi	r18, 0x28	; 40
 14e:	30 e0       	ldi	r19, 0x00	; 0
 150:	40 e0       	ldi	r20, 0x00	; 0
 152:	50 e0       	ldi	r21, 0x00	; 0
 154:	0e 94 9c 04 	call	0x938	; 0x938 <__udivmodsi4>
 158:	69 01       	movw	r12, r18
 15a:	7a 01       	movw	r14, r20
 15c:	c7 01       	movw	r24, r14
 15e:	b6 01       	movw	r22, r12
 160:	0e 94 07 03 	call	0x60e	; 0x60e <__floatunsisf>
 164:	0e 94 2c 04 	call	0x858	; 0x858 <sqrt>
 168:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fixunssfsi>
 16c:	f8 01       	movw	r30, r16
 16e:	71 83       	std	Z+1, r23	; 0x01
 170:	60 83       	st	Z, r22
 172:	18 82       	st	Y, r1
 174:	19 82       	std	Y+1, r1	; 0x01
 176:	1a 82       	std	Y+2, r1	; 0x02
 178:	1b 82       	std	Y+3, r1	; 0x03
 17a:	80 e0       	ldi	r24, 0x00	; 0
 17c:	df 91       	pop	r29
 17e:	cf 91       	pop	r28
 180:	1f 91       	pop	r17
 182:	0f 91       	pop	r16
 184:	ff 90       	pop	r15
 186:	ef 90       	pop	r14
 188:	df 90       	pop	r13
 18a:	cf 90       	pop	r12
 18c:	08 95       	ret

0000018e <refresh_display>:
 18e:	cf 93       	push	r28
 190:	df 93       	push	r29
 192:	ec 01       	movw	r28, r24
 194:	2b b1       	in	r18, 0x0b	; 11
 196:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 19a:	f0 e0       	ldi	r31, 0x00	; 0
 19c:	ee 0f       	add	r30, r30
 19e:	ff 1f       	adc	r31, r31
 1a0:	e8 0f       	add	r30, r24
 1a2:	f9 1f       	adc	r31, r25
 1a4:	81 e0       	ldi	r24, 0x01	; 1
 1a6:	90 e0       	ldi	r25, 0x00	; 0
 1a8:	00 80       	ld	r0, Z
 1aa:	02 c0       	rjmp	.+4      	; 0x1b0 <refresh_display+0x22>
 1ac:	88 0f       	add	r24, r24
 1ae:	99 1f       	adc	r25, r25
 1b0:	0a 94       	dec	r0
 1b2:	e2 f7       	brpl	.-8      	; 0x1ac <refresh_display+0x1e>
 1b4:	80 95       	com	r24
 1b6:	82 23       	and	r24, r18
 1b8:	8b b9       	out	0x0b, r24	; 11
 1ba:	5f 98       	cbi	0x0b, 7	; 11
 1bc:	5f 9a       	sbi	0x0b, 7	; 11
 1be:	80 91 0c 01 	lds	r24, 0x010C	; 0x80010c <__data_end>
 1c2:	8f 5f       	subi	r24, 0xFF	; 255
 1c4:	83 30       	cpi	r24, 0x03	; 3
 1c6:	18 f4       	brcc	.+6      	; 0x1ce <refresh_display+0x40>
 1c8:	80 93 0c 01 	sts	0x010C, r24	; 0x80010c <__data_end>
 1cc:	02 c0       	rjmp	.+4      	; 0x1d2 <refresh_display+0x44>
 1ce:	10 92 0c 01 	sts	0x010C, r1	; 0x80010c <__data_end>
 1d2:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 1d6:	f0 e0       	ldi	r31, 0x00	; 0
 1d8:	ee 0f       	add	r30, r30
 1da:	ff 1f       	adc	r31, r31
 1dc:	ec 0f       	add	r30, r28
 1de:	fd 1f       	adc	r31, r29
 1e0:	81 81       	ldd	r24, Z+1	; 0x01
 1e2:	0e 94 46 02 	call	0x48c	; 0x48c <SPI_0_write>
 1e6:	2b b1       	in	r18, 0x0b	; 11
 1e8:	e0 91 0c 01 	lds	r30, 0x010C	; 0x80010c <__data_end>
 1ec:	f0 e0       	ldi	r31, 0x00	; 0
 1ee:	ee 0f       	add	r30, r30
 1f0:	ff 1f       	adc	r31, r31
 1f2:	ec 0f       	add	r30, r28
 1f4:	fd 1f       	adc	r31, r29
 1f6:	81 e0       	ldi	r24, 0x01	; 1
 1f8:	90 e0       	ldi	r25, 0x00	; 0
 1fa:	00 80       	ld	r0, Z
 1fc:	02 c0       	rjmp	.+4      	; 0x202 <refresh_display+0x74>
 1fe:	88 0f       	add	r24, r24
 200:	99 1f       	adc	r25, r25
 202:	0a 94       	dec	r0
 204:	e2 f7       	brpl	.-8      	; 0x1fe <refresh_display+0x70>
 206:	82 2b       	or	r24, r18
 208:	8b b9       	out	0x0b, r24	; 11
 20a:	80 e0       	ldi	r24, 0x00	; 0
 20c:	df 91       	pop	r29
 20e:	cf 91       	pop	r28
 210:	08 95       	ret

00000212 <extract_digits>:
 212:	0f 93       	push	r16
 214:	1f 93       	push	r17
 216:	cf 93       	push	r28
 218:	df 93       	push	r29
 21a:	ac 01       	movw	r20, r24
 21c:	eb 01       	movw	r28, r22
 21e:	8b 01       	movw	r16, r22
 220:	0a 5f       	subi	r16, 0xFA	; 250
 222:	1f 4f       	sbci	r17, 0xFF	; 255
 224:	9a 01       	movw	r18, r20
 226:	ad ec       	ldi	r26, 0xCD	; 205
 228:	bc ec       	ldi	r27, 0xCC	; 204
 22a:	0e 94 be 04 	call	0x97c	; 0x97c <__umulhisi3>
 22e:	96 95       	lsr	r25
 230:	87 95       	ror	r24
 232:	96 95       	lsr	r25
 234:	87 95       	ror	r24
 236:	96 95       	lsr	r25
 238:	87 95       	ror	r24
 23a:	9c 01       	movw	r18, r24
 23c:	22 0f       	add	r18, r18
 23e:	33 1f       	adc	r19, r19
 240:	88 0f       	add	r24, r24
 242:	99 1f       	adc	r25, r25
 244:	88 0f       	add	r24, r24
 246:	99 1f       	adc	r25, r25
 248:	88 0f       	add	r24, r24
 24a:	99 1f       	adc	r25, r25
 24c:	82 0f       	add	r24, r18
 24e:	93 1f       	adc	r25, r19
 250:	fa 01       	movw	r30, r20
 252:	e8 1b       	sub	r30, r24
 254:	f9 0b       	sbc	r31, r25
 256:	ff 27       	eor	r31, r31
 258:	ef 5f       	subi	r30, 0xFF	; 255
 25a:	fe 4f       	sbci	r31, 0xFE	; 254
 25c:	80 81       	ld	r24, Z
 25e:	89 83       	std	Y+1, r24	; 0x01
 260:	9a 01       	movw	r18, r20
 262:	0e 94 be 04 	call	0x97c	; 0x97c <__umulhisi3>
 266:	ac 01       	movw	r20, r24
 268:	56 95       	lsr	r21
 26a:	47 95       	ror	r20
 26c:	56 95       	lsr	r21
 26e:	47 95       	ror	r20
 270:	56 95       	lsr	r21
 272:	47 95       	ror	r20
 274:	22 96       	adiw	r28, 0x02	; 2
 276:	c0 17       	cp	r28, r16
 278:	d1 07       	cpc	r29, r17
 27a:	a1 f6       	brne	.-88     	; 0x224 <extract_digits+0x12>
 27c:	df 91       	pop	r29
 27e:	cf 91       	pop	r28
 280:	1f 91       	pop	r17
 282:	0f 91       	pop	r16
 284:	08 95       	ret

00000286 <scale_output>:
 286:	bc 01       	movw	r22, r24
 288:	80 e0       	ldi	r24, 0x00	; 0
 28a:	90 e0       	ldi	r25, 0x00	; 0
 28c:	0e 94 07 03 	call	0x60e	; 0x60e <__floatunsisf>
 290:	25 e3       	ldi	r18, 0x35	; 53
 292:	3e e5       	ldi	r19, 0x5E	; 94
 294:	4a ef       	ldi	r20, 0xFA	; 250
 296:	5e e3       	ldi	r21, 0x3E	; 62
 298:	0e 94 95 03 	call	0x72a	; 0x72a <__mulsf3>
 29c:	0e 94 02 04 	call	0x804	; 0x804 <round>
 2a0:	08 95       	ret

000002a2 <mode_update_display_buffer>:
 2a2:	cf 93       	push	r28
 2a4:	df 93       	push	r29
 2a6:	ec 01       	movw	r28, r24
 2a8:	fb 01       	movw	r30, r22
 2aa:	80 81       	ld	r24, Z
 2ac:	91 81       	ldd	r25, Z+1	; 0x01
 2ae:	0e 94 43 01 	call	0x286	; 0x286 <scale_output>
 2b2:	0e 94 d8 02 	call	0x5b0	; 0x5b0 <__fixunssfsi>
 2b6:	dc 01       	movw	r26, r24
 2b8:	cb 01       	movw	r24, r22
 2ba:	be 01       	movw	r22, r28
 2bc:	0e 94 09 01 	call	0x212	; 0x212 <extract_digits>
 2c0:	80 e0       	ldi	r24, 0x00	; 0
 2c2:	df 91       	pop	r29
 2c4:	cf 91       	pop	r28
 2c6:	08 95       	ret

000002c8 <main>:
 2c8:	cf 93       	push	r28
 2ca:	df 93       	push	r29
 2cc:	cd b7       	in	r28, 0x3d	; 61
 2ce:	de b7       	in	r29, 0x3e	; 62
 2d0:	2c 97       	sbiw	r28, 0x0c	; 12
 2d2:	0f b6       	in	r0, 0x3f	; 63
 2d4:	f8 94       	cli
 2d6:	de bf       	out	0x3e, r29	; 62
 2d8:	0f be       	out	0x3f, r0	; 63
 2da:	cd bf       	out	0x3d, r28	; 61
 2dc:	2f ef       	ldi	r18, 0xFF	; 255
 2de:	83 ed       	ldi	r24, 0xD3	; 211
 2e0:	90 e3       	ldi	r25, 0x30	; 48
 2e2:	21 50       	subi	r18, 0x01	; 1
 2e4:	80 40       	sbci	r24, 0x00	; 0
 2e6:	90 40       	sbci	r25, 0x00	; 0
 2e8:	e1 f7       	brne	.-8      	; 0x2e2 <main+0x1a>
 2ea:	00 c0       	rjmp	.+0      	; 0x2ec <main+0x24>
 2ec:	00 00       	nop
 2ee:	0e 94 34 02 	call	0x468	; 0x468 <i_o_init>
 2f2:	0e 94 2b 02 	call	0x456	; 0x456 <device_init>
 2f6:	80 91 11 01 	lds	r24, 0x0111	; 0x800111 <adc_channel>
 2fa:	0e 94 1a 02 	call	0x434	; 0x434 <ADC_0_select_channel>
 2fe:	84 e0       	ldi	r24, 0x04	; 4
 300:	89 83       	std	Y+1, r24	; 0x01
 302:	1a 82       	std	Y+2, r1	; 0x02
 304:	85 e0       	ldi	r24, 0x05	; 5
 306:	8b 83       	std	Y+3, r24	; 0x03
 308:	1c 82       	std	Y+4, r1	; 0x04
 30a:	86 e0       	ldi	r24, 0x06	; 6
 30c:	8d 83       	std	Y+5, r24	; 0x05
 30e:	1e 82       	std	Y+6, r1	; 0x06
 310:	1f 82       	std	Y+7, r1	; 0x07
 312:	18 86       	std	Y+8, r1	; 0x08
 314:	19 86       	std	Y+9, r1	; 0x09
 316:	1a 86       	std	Y+10, r1	; 0x0a
 318:	1c 86       	std	Y+12, r1	; 0x0c
 31a:	1b 86       	std	Y+11, r1	; 0x0b
 31c:	78 94       	sei
 31e:	10 92 10 01 	sts	0x0110, r1	; 0x800110 <mode>
 322:	04 e0       	ldi	r16, 0x04	; 4
 324:	13 e0       	ldi	r17, 0x03	; 3
 326:	80 91 10 01 	lds	r24, 0x0110	; 0x800110 <mode>
 32a:	82 30       	cpi	r24, 0x02	; 2
 32c:	41 f1       	breq	.+80     	; 0x37e <main+0xb6>
 32e:	28 f4       	brcc	.+10     	; 0x33a <main+0x72>
 330:	88 23       	and	r24, r24
 332:	41 f0       	breq	.+16     	; 0x344 <main+0x7c>
 334:	81 30       	cpi	r24, 0x01	; 1
 336:	e1 f0       	breq	.+56     	; 0x370 <main+0xa8>
 338:	f6 cf       	rjmp	.-20     	; 0x326 <main+0x5e>
 33a:	83 30       	cpi	r24, 0x03	; 3
 33c:	51 f1       	breq	.+84     	; 0x392 <main+0xca>
 33e:	84 30       	cpi	r24, 0x04	; 4
 340:	91 f1       	breq	.+100    	; 0x3a6 <main+0xde>
 342:	f1 cf       	rjmp	.-30     	; 0x326 <main+0x5e>
 344:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <timer_ticks>
 348:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <timer_ticks+0x1>
 34c:	89 35       	cpi	r24, 0x59	; 89
 34e:	92 40       	sbci	r25, 0x02	; 2
 350:	30 f0       	brcs	.+12     	; 0x35e <main+0x96>
 352:	10 93 10 01 	sts	0x0110, r17	; 0x800110 <mode>
 356:	10 92 0f 01 	sts	0x010F, r1	; 0x80010f <timer_ticks+0x1>
 35a:	10 92 0e 01 	sts	0x010E, r1	; 0x80010e <timer_ticks>
 35e:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <disp_timer>
 362:	80 31       	cpi	r24, 0x10	; 16
 364:	00 f3       	brcs	.-64     	; 0x326 <main+0x5e>
 366:	10 92 0d 01 	sts	0x010D, r1	; 0x80010d <disp_timer>
 36a:	00 93 10 01 	sts	0x0110, r16	; 0x800110 <mode>
 36e:	db cf       	rjmp	.-74     	; 0x326 <main+0x5e>
 370:	ce 01       	movw	r24, r28
 372:	07 96       	adiw	r24, 0x07	; 7
 374:	0e 94 53 00 	call	0xa6	; 0xa6 <mode_measure>
 378:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <mode>
 37c:	d4 cf       	rjmp	.-88     	; 0x326 <main+0x5e>
 37e:	be 01       	movw	r22, r28
 380:	65 5f       	subi	r22, 0xF5	; 245
 382:	7f 4f       	sbci	r23, 0xFF	; 255
 384:	ce 01       	movw	r24, r28
 386:	07 96       	adiw	r24, 0x07	; 7
 388:	0e 94 98 00 	call	0x130	; 0x130 <mode_calculate_rms>
 38c:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <mode>
 390:	ca cf       	rjmp	.-108    	; 0x326 <main+0x5e>
 392:	be 01       	movw	r22, r28
 394:	65 5f       	subi	r22, 0xF5	; 245
 396:	7f 4f       	sbci	r23, 0xFF	; 255
 398:	ce 01       	movw	r24, r28
 39a:	01 96       	adiw	r24, 0x01	; 1
 39c:	0e 94 51 01 	call	0x2a2	; 0x2a2 <mode_update_display_buffer>
 3a0:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <mode>
 3a4:	c0 cf       	rjmp	.-128    	; 0x326 <main+0x5e>
 3a6:	ce 01       	movw	r24, r28
 3a8:	01 96       	adiw	r24, 0x01	; 1
 3aa:	0e 94 c7 00 	call	0x18e	; 0x18e <refresh_display>
 3ae:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <mode>
 3b2:	b9 cf       	rjmp	.-142    	; 0x326 <main+0x5e>

000003b4 <__vector_14>:

ISR(TIMER0_COMPA_vect)
{
 3b4:	1f 92       	push	r1
 3b6:	0f 92       	push	r0
 3b8:	0f b6       	in	r0, 0x3f	; 63
 3ba:	0f 92       	push	r0
 3bc:	11 24       	eor	r1, r1
 3be:	8f 93       	push	r24
 3c0:	9f 93       	push	r25
	timer_ticks += 1;
 3c2:	80 91 0e 01 	lds	r24, 0x010E	; 0x80010e <timer_ticks>
 3c6:	90 91 0f 01 	lds	r25, 0x010F	; 0x80010f <timer_ticks+0x1>
 3ca:	01 96       	adiw	r24, 0x01	; 1
 3cc:	90 93 0f 01 	sts	0x010F, r25	; 0x80010f <timer_ticks+0x1>
 3d0:	80 93 0e 01 	sts	0x010E, r24	; 0x80010e <timer_ticks>
	disp_timer += 1;
 3d4:	80 91 0d 01 	lds	r24, 0x010D	; 0x80010d <disp_timer>
 3d8:	8f 5f       	subi	r24, 0xFF	; 255
 3da:	80 93 0d 01 	sts	0x010D, r24	; 0x80010d <disp_timer>
	PORTC ^= (1 << TIMER_OUT);
 3de:	98 b1       	in	r25, 0x08	; 8
 3e0:	80 e2       	ldi	r24, 0x20	; 32
 3e2:	89 27       	eor	r24, r25
 3e4:	88 b9       	out	0x08, r24	; 8
}
 3e6:	9f 91       	pop	r25
 3e8:	8f 91       	pop	r24
 3ea:	0f 90       	pop	r0
 3ec:	0f be       	out	0x3f, r0	; 63
 3ee:	0f 90       	pop	r0
 3f0:	1f 90       	pop	r1
 3f2:	18 95       	reti

000003f4 <__vector_21>:

ISR(ADC_vect)
{
 3f4:	1f 92       	push	r1
 3f6:	0f 92       	push	r0
 3f8:	0f b6       	in	r0, 0x3f	; 63
 3fa:	0f 92       	push	r0
 3fc:	11 24       	eor	r1, r1
 3fe:	8f 93       	push	r24
	mode = MODE_MEASURE;
 400:	81 e0       	ldi	r24, 0x01	; 1
 402:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <mode>
 406:	8f 91       	pop	r24
 408:	0f 90       	pop	r0
 40a:	0f be       	out	0x3f, r0	; 63
 40c:	0f 90       	pop	r0
 40e:	1f 90       	pop	r1
 410:	18 95       	reti

00000412 <ADC_0_init>:
}

uint8_t ADC_0_is_conversion_done()
{
	return ((ADCSRA & (1 << ADIF)));
}
 412:	80 e4       	ldi	r24, 0x40	; 64
 414:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7e007c>
 418:	8f ea       	ldi	r24, 0xAF	; 175
 41a:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7e007a>
 41e:	83 e0       	ldi	r24, 0x03	; 3
 420:	80 93 7b 00 	sts	0x007B, r24	; 0x80007b <__TEXT_REGION_LENGTH__+0x7e007b>
 424:	80 e0       	ldi	r24, 0x00	; 0
 426:	08 95       	ret

00000428 <ADC_0_clear_interrupt_flag>:
 428:	ea e7       	ldi	r30, 0x7A	; 122
 42a:	f0 e0       	ldi	r31, 0x00	; 0
 42c:	80 81       	ld	r24, Z
 42e:	80 61       	ori	r24, 0x10	; 16
 430:	80 83       	st	Z, r24
 432:	08 95       	ret

00000434 <ADC_0_select_channel>:
 434:	ec e7       	ldi	r30, 0x7C	; 124
 436:	f0 e0       	ldi	r31, 0x00	; 0
 438:	90 81       	ld	r25, Z
 43a:	90 7f       	andi	r25, 0xF0	; 240
 43c:	8f 70       	andi	r24, 0x0F	; 15
 43e:	89 2b       	or	r24, r25
 440:	80 83       	st	Z, r24
 442:	08 95       	ret

00000444 <ADC_0_get_conversion_result>:

uint16_t ADC_0_get_conversion_result()
{
	ADC_0_clear_interrupt_flag();
 444:	0e 94 14 02 	call	0x428	; 0x428 <ADC_0_clear_interrupt_flag>
	return (ADCL | ADCH << 8);
 448:	80 91 78 00 	lds	r24, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7e0078>
 44c:	20 91 79 00 	lds	r18, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7e0079>
 450:	90 e0       	ldi	r25, 0x00	; 0
}
 452:	92 2b       	or	r25, r18
 454:	08 95       	ret

00000456 <device_init>:

#include <setup.h>

void device_init()
{
	TIMER_0_init();
 456:	0e 94 4b 02 	call	0x496	; 0x496 <TIMER_0_init>
	ADC_0_init();
 45a:	0e 94 09 02 	call	0x412	; 0x412 <ADC_0_init>
	USART_0_init();
 45e:	0e 94 59 02 	call	0x4b2	; 0x4b2 <USART_0_init>
	SPI_0_init();
 462:	0e 94 3b 02 	call	0x476	; 0x476 <SPI_0_init>
 466:	08 95       	ret

00000468 <i_o_init>:
}

void i_o_init()
{
	DDRC |= (1 << TIMER_OUT);
 468:	3d 9a       	sbi	0x07, 5	; 7
	DDRC |= (1 << INSTRUMENTATION_OUT);
 46a:	3c 9a       	sbi	0x07, 4	; 7
	DDRD |= (1 << DISPLAY_DIGIT_TENTHS);
 46c:	54 9a       	sbi	0x0a, 4	; 10
	DDRD |= (1 << DISPLAY_DIGIT_ONES);
 46e:	55 9a       	sbi	0x0a, 5	; 10
	DDRD |= (1 << DISPLAY_DIGIT_TENS);
 470:	56 9a       	sbi	0x0a, 6	; 10
	DDRD |= (1 << DISPLAY_CLR);
 472:	57 9a       	sbi	0x0a, 7	; 10
 474:	08 95       	ret

00000476 <SPI_0_init>:
	SPCR |= (1 << SPE);
}

void SPI_0_disable()
{
	SPCR &= ~(1 << SPE);
 476:	8c e2       	ldi	r24, 0x2C	; 44
 478:	84 b9       	out	0x04, r24	; 4
 47a:	e4 e6       	ldi	r30, 0x64	; 100
 47c:	f0 e0       	ldi	r31, 0x00	; 0
 47e:	80 81       	ld	r24, Z
 480:	8b 7f       	andi	r24, 0xFB	; 251
 482:	80 83       	st	Z, r24
 484:	80 e5       	ldi	r24, 0x50	; 80
 486:	8c bd       	out	0x2c, r24	; 44
 488:	1d bc       	out	0x2d, r1	; 45
 48a:	08 95       	ret

0000048c <SPI_0_write>:
}

void SPI_0_write(uint8_t data)
{
	SPDR = data;
 48c:	8e bd       	out	0x2e, r24	; 46
	while(!(SPSR & (1<<SPIF) ));	/* Wait until transmission complete */
 48e:	0d b4       	in	r0, 0x2d	; 45
 490:	07 fe       	sbrs	r0, 7
 492:	fd cf       	rjmp	.-6      	; 0x48e <SPI_0_write+0x2>
 494:	08 95       	ret

00000496 <TIMER_0_init>:
 */ 
#include <TC_0.h>

void TIMER_0_init(void)
{
	TCCR0A |= (1 << WGM01); // Mode 2, Clear on Timer Compare
 496:	84 b5       	in	r24, 0x24	; 36
 498:	82 60       	ori	r24, 0x02	; 2
 49a:	84 bd       	out	0x24, r24	; 36
	TCCR0B |= (1 << CS01) | (1 << CS00); // Prescaler set to clk/64
 49c:	85 b5       	in	r24, 0x25	; 37
 49e:	83 60       	ori	r24, 0x03	; 3
 4a0:	85 bd       	out	0x25, r24	; 37
	//OCR0A = 103; // 2.4 kHz @ 16 MHz system clock
	OCR0A = 129; // 2.4 kHz @ 20 MHz system clock
 4a2:	81 e8       	ldi	r24, 0x81	; 129
 4a4:	87 bd       	out	0x27, r24	; 39
	TIMSK0 |= (1 << OCIE0A);	// Compare A Match Interrupt Enable
 4a6:	ee e6       	ldi	r30, 0x6E	; 110
 4a8:	f0 e0       	ldi	r31, 0x00	; 0
 4aa:	80 81       	ld	r24, Z
 4ac:	82 60       	ori	r24, 0x02	; 2
 4ae:	80 83       	st	Z, r24
 4b0:	08 95       	ret

000004b2 <USART_0_init>:
	
	#define BAUD 115200
	#include <util/setbaud.h>
	
	/* Enable USART0 */
	PRR &= ~(1 << PRUSART0);
 4b2:	e4 e6       	ldi	r30, 0x64	; 100
 4b4:	f0 e0       	ldi	r31, 0x00	; 0
 4b6:	80 81       	ld	r24, Z
 4b8:	8d 7f       	andi	r24, 0xFD	; 253
 4ba:	80 83       	st	Z, r24
	
	UBRR0H = UBRRH_VALUE;
 4bc:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = UBRRL_VALUE;
 4c0:	80 e1       	ldi	r24, 0x10	; 16
 4c2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>

	UCSR0A = USE_2X << U2X0 /*  */
 4c6:	82 e0       	ldi	r24, 0x02	; 2
 4c8:	80 93 c0 00 	sts	0x00C0, r24	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
			| (0 << MPCM0);  /* Multi-processor Communication Mode: disabled */

	UCSR0B =  (1 << RXCIE0)    /* RX Complete Interrupt Enable: enabled */
 4cc:	88 e9       	ldi	r24, 0x98	; 152
 4ce:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7e00c1>
	//		 | (0 << UPM01) | (0 << UPM00) /* Disabled */
	//		 | 0 << USBS0 /* USART Stop Bit Select: disabled */
	//		 | (1 << UCSZ01) | (1 << UCSZ00); /* 8-bit */

	return 0;
}
 4d2:	80 e0       	ldi	r24, 0x00	; 0
 4d4:	08 95       	ret

000004d6 <__subsf3>:
 4d6:	50 58       	subi	r21, 0x80	; 128

000004d8 <__addsf3>:
 4d8:	bb 27       	eor	r27, r27
 4da:	aa 27       	eor	r26, r26
 4dc:	0e 94 83 02 	call	0x506	; 0x506 <__addsf3x>
 4e0:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <__fp_round>
 4e4:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_pscA>
 4e8:	38 f0       	brcs	.+14     	; 0x4f8 <__addsf3+0x20>
 4ea:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__fp_pscB>
 4ee:	20 f0       	brcs	.+8      	; 0x4f8 <__addsf3+0x20>
 4f0:	39 f4       	brne	.+14     	; 0x500 <__addsf3+0x28>
 4f2:	9f 3f       	cpi	r25, 0xFF	; 255
 4f4:	19 f4       	brne	.+6      	; 0x4fc <__addsf3+0x24>
 4f6:	26 f4       	brtc	.+8      	; 0x500 <__addsf3+0x28>
 4f8:	0c 94 4a 03 	jmp	0x694	; 0x694 <__fp_nan>
 4fc:	0e f4       	brtc	.+2      	; 0x500 <__addsf3+0x28>
 4fe:	e0 95       	com	r30
 500:	e7 fb       	bst	r30, 7
 502:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_inf>

00000506 <__addsf3x>:
 506:	e9 2f       	mov	r30, r25
 508:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_split3>
 50c:	58 f3       	brcs	.-42     	; 0x4e4 <__addsf3+0xc>
 50e:	ba 17       	cp	r27, r26
 510:	62 07       	cpc	r22, r18
 512:	73 07       	cpc	r23, r19
 514:	84 07       	cpc	r24, r20
 516:	95 07       	cpc	r25, r21
 518:	20 f0       	brcs	.+8      	; 0x522 <__addsf3x+0x1c>
 51a:	79 f4       	brne	.+30     	; 0x53a <__addsf3x+0x34>
 51c:	a6 f5       	brtc	.+104    	; 0x586 <__addsf3x+0x80>
 51e:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__fp_zero>
 522:	0e f4       	brtc	.+2      	; 0x526 <__addsf3x+0x20>
 524:	e0 95       	com	r30
 526:	0b 2e       	mov	r0, r27
 528:	ba 2f       	mov	r27, r26
 52a:	a0 2d       	mov	r26, r0
 52c:	0b 01       	movw	r0, r22
 52e:	b9 01       	movw	r22, r18
 530:	90 01       	movw	r18, r0
 532:	0c 01       	movw	r0, r24
 534:	ca 01       	movw	r24, r20
 536:	a0 01       	movw	r20, r0
 538:	11 24       	eor	r1, r1
 53a:	ff 27       	eor	r31, r31
 53c:	59 1b       	sub	r21, r25
 53e:	99 f0       	breq	.+38     	; 0x566 <__addsf3x+0x60>
 540:	59 3f       	cpi	r21, 0xF9	; 249
 542:	50 f4       	brcc	.+20     	; 0x558 <__addsf3x+0x52>
 544:	50 3e       	cpi	r21, 0xE0	; 224
 546:	68 f1       	brcs	.+90     	; 0x5a2 <__addsf3x+0x9c>
 548:	1a 16       	cp	r1, r26
 54a:	f0 40       	sbci	r31, 0x00	; 0
 54c:	a2 2f       	mov	r26, r18
 54e:	23 2f       	mov	r18, r19
 550:	34 2f       	mov	r19, r20
 552:	44 27       	eor	r20, r20
 554:	58 5f       	subi	r21, 0xF8	; 248
 556:	f3 cf       	rjmp	.-26     	; 0x53e <__addsf3x+0x38>
 558:	46 95       	lsr	r20
 55a:	37 95       	ror	r19
 55c:	27 95       	ror	r18
 55e:	a7 95       	ror	r26
 560:	f0 40       	sbci	r31, 0x00	; 0
 562:	53 95       	inc	r21
 564:	c9 f7       	brne	.-14     	; 0x558 <__addsf3x+0x52>
 566:	7e f4       	brtc	.+30     	; 0x586 <__addsf3x+0x80>
 568:	1f 16       	cp	r1, r31
 56a:	ba 0b       	sbc	r27, r26
 56c:	62 0b       	sbc	r22, r18
 56e:	73 0b       	sbc	r23, r19
 570:	84 0b       	sbc	r24, r20
 572:	ba f0       	brmi	.+46     	; 0x5a2 <__addsf3x+0x9c>
 574:	91 50       	subi	r25, 0x01	; 1
 576:	a1 f0       	breq	.+40     	; 0x5a0 <__addsf3x+0x9a>
 578:	ff 0f       	add	r31, r31
 57a:	bb 1f       	adc	r27, r27
 57c:	66 1f       	adc	r22, r22
 57e:	77 1f       	adc	r23, r23
 580:	88 1f       	adc	r24, r24
 582:	c2 f7       	brpl	.-16     	; 0x574 <__addsf3x+0x6e>
 584:	0e c0       	rjmp	.+28     	; 0x5a2 <__addsf3x+0x9c>
 586:	ba 0f       	add	r27, r26
 588:	62 1f       	adc	r22, r18
 58a:	73 1f       	adc	r23, r19
 58c:	84 1f       	adc	r24, r20
 58e:	48 f4       	brcc	.+18     	; 0x5a2 <__addsf3x+0x9c>
 590:	87 95       	ror	r24
 592:	77 95       	ror	r23
 594:	67 95       	ror	r22
 596:	b7 95       	ror	r27
 598:	f7 95       	ror	r31
 59a:	9e 3f       	cpi	r25, 0xFE	; 254
 59c:	08 f0       	brcs	.+2      	; 0x5a0 <__addsf3x+0x9a>
 59e:	b0 cf       	rjmp	.-160    	; 0x500 <__addsf3+0x28>
 5a0:	93 95       	inc	r25
 5a2:	88 0f       	add	r24, r24
 5a4:	08 f0       	brcs	.+2      	; 0x5a8 <__addsf3x+0xa2>
 5a6:	99 27       	eor	r25, r25
 5a8:	ee 0f       	add	r30, r30
 5aa:	97 95       	ror	r25
 5ac:	87 95       	ror	r24
 5ae:	08 95       	ret

000005b0 <__fixunssfsi>:
 5b0:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__fp_splitA>
 5b4:	88 f0       	brcs	.+34     	; 0x5d8 <__fixunssfsi+0x28>
 5b6:	9f 57       	subi	r25, 0x7F	; 127
 5b8:	98 f0       	brcs	.+38     	; 0x5e0 <__fixunssfsi+0x30>
 5ba:	b9 2f       	mov	r27, r25
 5bc:	99 27       	eor	r25, r25
 5be:	b7 51       	subi	r27, 0x17	; 23
 5c0:	b0 f0       	brcs	.+44     	; 0x5ee <__fixunssfsi+0x3e>
 5c2:	e1 f0       	breq	.+56     	; 0x5fc <__fixunssfsi+0x4c>
 5c4:	66 0f       	add	r22, r22
 5c6:	77 1f       	adc	r23, r23
 5c8:	88 1f       	adc	r24, r24
 5ca:	99 1f       	adc	r25, r25
 5cc:	1a f0       	brmi	.+6      	; 0x5d4 <__fixunssfsi+0x24>
 5ce:	ba 95       	dec	r27
 5d0:	c9 f7       	brne	.-14     	; 0x5c4 <__fixunssfsi+0x14>
 5d2:	14 c0       	rjmp	.+40     	; 0x5fc <__fixunssfsi+0x4c>
 5d4:	b1 30       	cpi	r27, 0x01	; 1
 5d6:	91 f0       	breq	.+36     	; 0x5fc <__fixunssfsi+0x4c>
 5d8:	0e 94 8e 03 	call	0x71c	; 0x71c <__fp_zero>
 5dc:	b1 e0       	ldi	r27, 0x01	; 1
 5de:	08 95       	ret
 5e0:	0c 94 8e 03 	jmp	0x71c	; 0x71c <__fp_zero>
 5e4:	67 2f       	mov	r22, r23
 5e6:	78 2f       	mov	r23, r24
 5e8:	88 27       	eor	r24, r24
 5ea:	b8 5f       	subi	r27, 0xF8	; 248
 5ec:	39 f0       	breq	.+14     	; 0x5fc <__fixunssfsi+0x4c>
 5ee:	b9 3f       	cpi	r27, 0xF9	; 249
 5f0:	cc f3       	brlt	.-14     	; 0x5e4 <__fixunssfsi+0x34>
 5f2:	86 95       	lsr	r24
 5f4:	77 95       	ror	r23
 5f6:	67 95       	ror	r22
 5f8:	b3 95       	inc	r27
 5fa:	d9 f7       	brne	.-10     	; 0x5f2 <__fixunssfsi+0x42>
 5fc:	3e f4       	brtc	.+14     	; 0x60c <__fixunssfsi+0x5c>
 5fe:	90 95       	com	r25
 600:	80 95       	com	r24
 602:	70 95       	com	r23
 604:	61 95       	neg	r22
 606:	7f 4f       	sbci	r23, 0xFF	; 255
 608:	8f 4f       	sbci	r24, 0xFF	; 255
 60a:	9f 4f       	sbci	r25, 0xFF	; 255
 60c:	08 95       	ret

0000060e <__floatunsisf>:
 60e:	e8 94       	clt
 610:	09 c0       	rjmp	.+18     	; 0x624 <__floatsisf+0x12>

00000612 <__floatsisf>:
 612:	97 fb       	bst	r25, 7
 614:	3e f4       	brtc	.+14     	; 0x624 <__floatsisf+0x12>
 616:	90 95       	com	r25
 618:	80 95       	com	r24
 61a:	70 95       	com	r23
 61c:	61 95       	neg	r22
 61e:	7f 4f       	sbci	r23, 0xFF	; 255
 620:	8f 4f       	sbci	r24, 0xFF	; 255
 622:	9f 4f       	sbci	r25, 0xFF	; 255
 624:	99 23       	and	r25, r25
 626:	a9 f0       	breq	.+42     	; 0x652 <__floatsisf+0x40>
 628:	f9 2f       	mov	r31, r25
 62a:	96 e9       	ldi	r25, 0x96	; 150
 62c:	bb 27       	eor	r27, r27
 62e:	93 95       	inc	r25
 630:	f6 95       	lsr	r31
 632:	87 95       	ror	r24
 634:	77 95       	ror	r23
 636:	67 95       	ror	r22
 638:	b7 95       	ror	r27
 63a:	f1 11       	cpse	r31, r1
 63c:	f8 cf       	rjmp	.-16     	; 0x62e <__floatsisf+0x1c>
 63e:	fa f4       	brpl	.+62     	; 0x67e <__floatsisf+0x6c>
 640:	bb 0f       	add	r27, r27
 642:	11 f4       	brne	.+4      	; 0x648 <__floatsisf+0x36>
 644:	60 ff       	sbrs	r22, 0
 646:	1b c0       	rjmp	.+54     	; 0x67e <__floatsisf+0x6c>
 648:	6f 5f       	subi	r22, 0xFF	; 255
 64a:	7f 4f       	sbci	r23, 0xFF	; 255
 64c:	8f 4f       	sbci	r24, 0xFF	; 255
 64e:	9f 4f       	sbci	r25, 0xFF	; 255
 650:	16 c0       	rjmp	.+44     	; 0x67e <__floatsisf+0x6c>
 652:	88 23       	and	r24, r24
 654:	11 f0       	breq	.+4      	; 0x65a <__floatsisf+0x48>
 656:	96 e9       	ldi	r25, 0x96	; 150
 658:	11 c0       	rjmp	.+34     	; 0x67c <__floatsisf+0x6a>
 65a:	77 23       	and	r23, r23
 65c:	21 f0       	breq	.+8      	; 0x666 <__floatsisf+0x54>
 65e:	9e e8       	ldi	r25, 0x8E	; 142
 660:	87 2f       	mov	r24, r23
 662:	76 2f       	mov	r23, r22
 664:	05 c0       	rjmp	.+10     	; 0x670 <__floatsisf+0x5e>
 666:	66 23       	and	r22, r22
 668:	71 f0       	breq	.+28     	; 0x686 <__floatsisf+0x74>
 66a:	96 e8       	ldi	r25, 0x86	; 134
 66c:	86 2f       	mov	r24, r22
 66e:	70 e0       	ldi	r23, 0x00	; 0
 670:	60 e0       	ldi	r22, 0x00	; 0
 672:	2a f0       	brmi	.+10     	; 0x67e <__floatsisf+0x6c>
 674:	9a 95       	dec	r25
 676:	66 0f       	add	r22, r22
 678:	77 1f       	adc	r23, r23
 67a:	88 1f       	adc	r24, r24
 67c:	da f7       	brpl	.-10     	; 0x674 <__floatsisf+0x62>
 67e:	88 0f       	add	r24, r24
 680:	96 95       	lsr	r25
 682:	87 95       	ror	r24
 684:	97 f9       	bld	r25, 7
 686:	08 95       	ret

00000688 <__fp_inf>:
 688:	97 f9       	bld	r25, 7
 68a:	9f 67       	ori	r25, 0x7F	; 127
 68c:	80 e8       	ldi	r24, 0x80	; 128
 68e:	70 e0       	ldi	r23, 0x00	; 0
 690:	60 e0       	ldi	r22, 0x00	; 0
 692:	08 95       	ret

00000694 <__fp_nan>:
 694:	9f ef       	ldi	r25, 0xFF	; 255
 696:	80 ec       	ldi	r24, 0xC0	; 192
 698:	08 95       	ret

0000069a <__fp_pscA>:
 69a:	00 24       	eor	r0, r0
 69c:	0a 94       	dec	r0
 69e:	16 16       	cp	r1, r22
 6a0:	17 06       	cpc	r1, r23
 6a2:	18 06       	cpc	r1, r24
 6a4:	09 06       	cpc	r0, r25
 6a6:	08 95       	ret

000006a8 <__fp_pscB>:
 6a8:	00 24       	eor	r0, r0
 6aa:	0a 94       	dec	r0
 6ac:	12 16       	cp	r1, r18
 6ae:	13 06       	cpc	r1, r19
 6b0:	14 06       	cpc	r1, r20
 6b2:	05 06       	cpc	r0, r21
 6b4:	08 95       	ret

000006b6 <__fp_round>:
 6b6:	09 2e       	mov	r0, r25
 6b8:	03 94       	inc	r0
 6ba:	00 0c       	add	r0, r0
 6bc:	11 f4       	brne	.+4      	; 0x6c2 <__fp_round+0xc>
 6be:	88 23       	and	r24, r24
 6c0:	52 f0       	brmi	.+20     	; 0x6d6 <__fp_round+0x20>
 6c2:	bb 0f       	add	r27, r27
 6c4:	40 f4       	brcc	.+16     	; 0x6d6 <__fp_round+0x20>
 6c6:	bf 2b       	or	r27, r31
 6c8:	11 f4       	brne	.+4      	; 0x6ce <__fp_round+0x18>
 6ca:	60 ff       	sbrs	r22, 0
 6cc:	04 c0       	rjmp	.+8      	; 0x6d6 <__fp_round+0x20>
 6ce:	6f 5f       	subi	r22, 0xFF	; 255
 6d0:	7f 4f       	sbci	r23, 0xFF	; 255
 6d2:	8f 4f       	sbci	r24, 0xFF	; 255
 6d4:	9f 4f       	sbci	r25, 0xFF	; 255
 6d6:	08 95       	ret

000006d8 <__fp_split3>:
 6d8:	57 fd       	sbrc	r21, 7
 6da:	90 58       	subi	r25, 0x80	; 128
 6dc:	44 0f       	add	r20, r20
 6de:	55 1f       	adc	r21, r21
 6e0:	59 f0       	breq	.+22     	; 0x6f8 <__fp_splitA+0x10>
 6e2:	5f 3f       	cpi	r21, 0xFF	; 255
 6e4:	71 f0       	breq	.+28     	; 0x702 <__fp_splitA+0x1a>
 6e6:	47 95       	ror	r20

000006e8 <__fp_splitA>:
 6e8:	88 0f       	add	r24, r24
 6ea:	97 fb       	bst	r25, 7
 6ec:	99 1f       	adc	r25, r25
 6ee:	61 f0       	breq	.+24     	; 0x708 <__fp_splitA+0x20>
 6f0:	9f 3f       	cpi	r25, 0xFF	; 255
 6f2:	79 f0       	breq	.+30     	; 0x712 <__fp_splitA+0x2a>
 6f4:	87 95       	ror	r24
 6f6:	08 95       	ret
 6f8:	12 16       	cp	r1, r18
 6fa:	13 06       	cpc	r1, r19
 6fc:	14 06       	cpc	r1, r20
 6fe:	55 1f       	adc	r21, r21
 700:	f2 cf       	rjmp	.-28     	; 0x6e6 <__fp_split3+0xe>
 702:	46 95       	lsr	r20
 704:	f1 df       	rcall	.-30     	; 0x6e8 <__fp_splitA>
 706:	08 c0       	rjmp	.+16     	; 0x718 <__fp_splitA+0x30>
 708:	16 16       	cp	r1, r22
 70a:	17 06       	cpc	r1, r23
 70c:	18 06       	cpc	r1, r24
 70e:	99 1f       	adc	r25, r25
 710:	f1 cf       	rjmp	.-30     	; 0x6f4 <__fp_splitA+0xc>
 712:	86 95       	lsr	r24
 714:	71 05       	cpc	r23, r1
 716:	61 05       	cpc	r22, r1
 718:	08 94       	sec
 71a:	08 95       	ret

0000071c <__fp_zero>:
 71c:	e8 94       	clt

0000071e <__fp_szero>:
 71e:	bb 27       	eor	r27, r27
 720:	66 27       	eor	r22, r22
 722:	77 27       	eor	r23, r23
 724:	cb 01       	movw	r24, r22
 726:	97 f9       	bld	r25, 7
 728:	08 95       	ret

0000072a <__mulsf3>:
 72a:	0e 94 a8 03 	call	0x750	; 0x750 <__mulsf3x>
 72e:	0c 94 5b 03 	jmp	0x6b6	; 0x6b6 <__fp_round>
 732:	0e 94 4d 03 	call	0x69a	; 0x69a <__fp_pscA>
 736:	38 f0       	brcs	.+14     	; 0x746 <__mulsf3+0x1c>
 738:	0e 94 54 03 	call	0x6a8	; 0x6a8 <__fp_pscB>
 73c:	20 f0       	brcs	.+8      	; 0x746 <__mulsf3+0x1c>
 73e:	95 23       	and	r25, r21
 740:	11 f0       	breq	.+4      	; 0x746 <__mulsf3+0x1c>
 742:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_inf>
 746:	0c 94 4a 03 	jmp	0x694	; 0x694 <__fp_nan>
 74a:	11 24       	eor	r1, r1
 74c:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__fp_szero>

00000750 <__mulsf3x>:
 750:	0e 94 6c 03 	call	0x6d8	; 0x6d8 <__fp_split3>
 754:	70 f3       	brcs	.-36     	; 0x732 <__mulsf3+0x8>

00000756 <__mulsf3_pse>:
 756:	95 9f       	mul	r25, r21
 758:	c1 f3       	breq	.-16     	; 0x74a <__mulsf3+0x20>
 75a:	95 0f       	add	r25, r21
 75c:	50 e0       	ldi	r21, 0x00	; 0
 75e:	55 1f       	adc	r21, r21
 760:	62 9f       	mul	r22, r18
 762:	f0 01       	movw	r30, r0
 764:	72 9f       	mul	r23, r18
 766:	bb 27       	eor	r27, r27
 768:	f0 0d       	add	r31, r0
 76a:	b1 1d       	adc	r27, r1
 76c:	63 9f       	mul	r22, r19
 76e:	aa 27       	eor	r26, r26
 770:	f0 0d       	add	r31, r0
 772:	b1 1d       	adc	r27, r1
 774:	aa 1f       	adc	r26, r26
 776:	64 9f       	mul	r22, r20
 778:	66 27       	eor	r22, r22
 77a:	b0 0d       	add	r27, r0
 77c:	a1 1d       	adc	r26, r1
 77e:	66 1f       	adc	r22, r22
 780:	82 9f       	mul	r24, r18
 782:	22 27       	eor	r18, r18
 784:	b0 0d       	add	r27, r0
 786:	a1 1d       	adc	r26, r1
 788:	62 1f       	adc	r22, r18
 78a:	73 9f       	mul	r23, r19
 78c:	b0 0d       	add	r27, r0
 78e:	a1 1d       	adc	r26, r1
 790:	62 1f       	adc	r22, r18
 792:	83 9f       	mul	r24, r19
 794:	a0 0d       	add	r26, r0
 796:	61 1d       	adc	r22, r1
 798:	22 1f       	adc	r18, r18
 79a:	74 9f       	mul	r23, r20
 79c:	33 27       	eor	r19, r19
 79e:	a0 0d       	add	r26, r0
 7a0:	61 1d       	adc	r22, r1
 7a2:	23 1f       	adc	r18, r19
 7a4:	84 9f       	mul	r24, r20
 7a6:	60 0d       	add	r22, r0
 7a8:	21 1d       	adc	r18, r1
 7aa:	82 2f       	mov	r24, r18
 7ac:	76 2f       	mov	r23, r22
 7ae:	6a 2f       	mov	r22, r26
 7b0:	11 24       	eor	r1, r1
 7b2:	9f 57       	subi	r25, 0x7F	; 127
 7b4:	50 40       	sbci	r21, 0x00	; 0
 7b6:	9a f0       	brmi	.+38     	; 0x7de <__mulsf3_pse+0x88>
 7b8:	f1 f0       	breq	.+60     	; 0x7f6 <__mulsf3_pse+0xa0>
 7ba:	88 23       	and	r24, r24
 7bc:	4a f0       	brmi	.+18     	; 0x7d0 <__mulsf3_pse+0x7a>
 7be:	ee 0f       	add	r30, r30
 7c0:	ff 1f       	adc	r31, r31
 7c2:	bb 1f       	adc	r27, r27
 7c4:	66 1f       	adc	r22, r22
 7c6:	77 1f       	adc	r23, r23
 7c8:	88 1f       	adc	r24, r24
 7ca:	91 50       	subi	r25, 0x01	; 1
 7cc:	50 40       	sbci	r21, 0x00	; 0
 7ce:	a9 f7       	brne	.-22     	; 0x7ba <__mulsf3_pse+0x64>
 7d0:	9e 3f       	cpi	r25, 0xFE	; 254
 7d2:	51 05       	cpc	r21, r1
 7d4:	80 f0       	brcs	.+32     	; 0x7f6 <__mulsf3_pse+0xa0>
 7d6:	0c 94 44 03 	jmp	0x688	; 0x688 <__fp_inf>
 7da:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__fp_szero>
 7de:	5f 3f       	cpi	r21, 0xFF	; 255
 7e0:	e4 f3       	brlt	.-8      	; 0x7da <__mulsf3_pse+0x84>
 7e2:	98 3e       	cpi	r25, 0xE8	; 232
 7e4:	d4 f3       	brlt	.-12     	; 0x7da <__mulsf3_pse+0x84>
 7e6:	86 95       	lsr	r24
 7e8:	77 95       	ror	r23
 7ea:	67 95       	ror	r22
 7ec:	b7 95       	ror	r27
 7ee:	f7 95       	ror	r31
 7f0:	e7 95       	ror	r30
 7f2:	9f 5f       	subi	r25, 0xFF	; 255
 7f4:	c1 f7       	brne	.-16     	; 0x7e6 <__mulsf3_pse+0x90>
 7f6:	fe 2b       	or	r31, r30
 7f8:	88 0f       	add	r24, r24
 7fa:	91 1d       	adc	r25, r1
 7fc:	96 95       	lsr	r25
 7fe:	87 95       	ror	r24
 800:	97 f9       	bld	r25, 7
 802:	08 95       	ret

00000804 <round>:
 804:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__fp_splitA>
 808:	e8 f0       	brcs	.+58     	; 0x844 <round+0x40>
 80a:	9e 37       	cpi	r25, 0x7E	; 126
 80c:	e8 f0       	brcs	.+58     	; 0x848 <round+0x44>
 80e:	96 39       	cpi	r25, 0x96	; 150
 810:	b8 f4       	brcc	.+46     	; 0x840 <round+0x3c>
 812:	9e 38       	cpi	r25, 0x8E	; 142
 814:	48 f4       	brcc	.+18     	; 0x828 <round+0x24>
 816:	67 2f       	mov	r22, r23
 818:	78 2f       	mov	r23, r24
 81a:	88 27       	eor	r24, r24
 81c:	98 5f       	subi	r25, 0xF8	; 248
 81e:	f9 cf       	rjmp	.-14     	; 0x812 <round+0xe>
 820:	86 95       	lsr	r24
 822:	77 95       	ror	r23
 824:	67 95       	ror	r22
 826:	93 95       	inc	r25
 828:	95 39       	cpi	r25, 0x95	; 149
 82a:	d0 f3       	brcs	.-12     	; 0x820 <round+0x1c>
 82c:	b6 2f       	mov	r27, r22
 82e:	b1 70       	andi	r27, 0x01	; 1
 830:	6b 0f       	add	r22, r27
 832:	71 1d       	adc	r23, r1
 834:	81 1d       	adc	r24, r1
 836:	20 f4       	brcc	.+8      	; 0x840 <round+0x3c>
 838:	87 95       	ror	r24
 83a:	77 95       	ror	r23
 83c:	67 95       	ror	r22
 83e:	93 95       	inc	r25
 840:	0c 94 6c 04 	jmp	0x8d8	; 0x8d8 <__fp_mintl>
 844:	0c 94 87 04 	jmp	0x90e	; 0x90e <__fp_mpack>
 848:	0c 94 8f 03 	jmp	0x71e	; 0x71e <__fp_szero>
 84c:	19 f4       	brne	.+6      	; 0x854 <round+0x50>
 84e:	16 f4       	brtc	.+4      	; 0x854 <round+0x50>
 850:	0c 94 4a 03 	jmp	0x694	; 0x694 <__fp_nan>
 854:	0c 94 87 04 	jmp	0x90e	; 0x90e <__fp_mpack>

00000858 <sqrt>:
 858:	0e 94 74 03 	call	0x6e8	; 0x6e8 <__fp_splitA>
 85c:	b8 f3       	brcs	.-18     	; 0x84c <round+0x48>
 85e:	99 23       	and	r25, r25
 860:	c9 f3       	breq	.-14     	; 0x854 <round+0x50>
 862:	b6 f3       	brts	.-20     	; 0x850 <round+0x4c>
 864:	9f 57       	subi	r25, 0x7F	; 127
 866:	55 0b       	sbc	r21, r21
 868:	87 ff       	sbrs	r24, 7
 86a:	0e 94 95 04 	call	0x92a	; 0x92a <__fp_norm2>
 86e:	00 24       	eor	r0, r0
 870:	a0 e6       	ldi	r26, 0x60	; 96
 872:	40 ea       	ldi	r20, 0xA0	; 160
 874:	90 01       	movw	r18, r0
 876:	80 58       	subi	r24, 0x80	; 128
 878:	56 95       	lsr	r21
 87a:	97 95       	ror	r25
 87c:	28 f4       	brcc	.+10     	; 0x888 <sqrt+0x30>
 87e:	80 5c       	subi	r24, 0xC0	; 192
 880:	66 0f       	add	r22, r22
 882:	77 1f       	adc	r23, r23
 884:	88 1f       	adc	r24, r24
 886:	20 f0       	brcs	.+8      	; 0x890 <sqrt+0x38>
 888:	26 17       	cp	r18, r22
 88a:	37 07       	cpc	r19, r23
 88c:	48 07       	cpc	r20, r24
 88e:	30 f4       	brcc	.+12     	; 0x89c <sqrt+0x44>
 890:	62 1b       	sub	r22, r18
 892:	73 0b       	sbc	r23, r19
 894:	84 0b       	sbc	r24, r20
 896:	20 29       	or	r18, r0
 898:	31 29       	or	r19, r1
 89a:	4a 2b       	or	r20, r26
 89c:	a6 95       	lsr	r26
 89e:	17 94       	ror	r1
 8a0:	07 94       	ror	r0
 8a2:	20 25       	eor	r18, r0
 8a4:	31 25       	eor	r19, r1
 8a6:	4a 27       	eor	r20, r26
 8a8:	58 f7       	brcc	.-42     	; 0x880 <sqrt+0x28>
 8aa:	66 0f       	add	r22, r22
 8ac:	77 1f       	adc	r23, r23
 8ae:	88 1f       	adc	r24, r24
 8b0:	20 f0       	brcs	.+8      	; 0x8ba <sqrt+0x62>
 8b2:	26 17       	cp	r18, r22
 8b4:	37 07       	cpc	r19, r23
 8b6:	48 07       	cpc	r20, r24
 8b8:	30 f4       	brcc	.+12     	; 0x8c6 <sqrt+0x6e>
 8ba:	62 0b       	sbc	r22, r18
 8bc:	73 0b       	sbc	r23, r19
 8be:	84 0b       	sbc	r24, r20
 8c0:	20 0d       	add	r18, r0
 8c2:	31 1d       	adc	r19, r1
 8c4:	41 1d       	adc	r20, r1
 8c6:	a0 95       	com	r26
 8c8:	81 f7       	brne	.-32     	; 0x8aa <sqrt+0x52>
 8ca:	b9 01       	movw	r22, r18
 8cc:	84 2f       	mov	r24, r20
 8ce:	91 58       	subi	r25, 0x81	; 129
 8d0:	88 0f       	add	r24, r24
 8d2:	96 95       	lsr	r25
 8d4:	87 95       	ror	r24
 8d6:	08 95       	ret

000008d8 <__fp_mintl>:
 8d8:	88 23       	and	r24, r24
 8da:	71 f4       	brne	.+28     	; 0x8f8 <__fp_mintl+0x20>
 8dc:	77 23       	and	r23, r23
 8de:	21 f0       	breq	.+8      	; 0x8e8 <__fp_mintl+0x10>
 8e0:	98 50       	subi	r25, 0x08	; 8
 8e2:	87 2b       	or	r24, r23
 8e4:	76 2f       	mov	r23, r22
 8e6:	07 c0       	rjmp	.+14     	; 0x8f6 <__fp_mintl+0x1e>
 8e8:	66 23       	and	r22, r22
 8ea:	11 f4       	brne	.+4      	; 0x8f0 <__fp_mintl+0x18>
 8ec:	99 27       	eor	r25, r25
 8ee:	0d c0       	rjmp	.+26     	; 0x90a <__stack+0xb>
 8f0:	90 51       	subi	r25, 0x10	; 16
 8f2:	86 2b       	or	r24, r22
 8f4:	70 e0       	ldi	r23, 0x00	; 0
 8f6:	60 e0       	ldi	r22, 0x00	; 0
 8f8:	2a f0       	brmi	.+10     	; 0x904 <__stack+0x5>
 8fa:	9a 95       	dec	r25
 8fc:	66 0f       	add	r22, r22
 8fe:	77 1f       	adc	r23, r23
 900:	88 1f       	adc	r24, r24
 902:	da f7       	brpl	.-10     	; 0x8fa <__fp_mintl+0x22>
 904:	88 0f       	add	r24, r24
 906:	96 95       	lsr	r25
 908:	87 95       	ror	r24
 90a:	97 f9       	bld	r25, 7
 90c:	08 95       	ret

0000090e <__fp_mpack>:
 90e:	9f 3f       	cpi	r25, 0xFF	; 255
 910:	31 f0       	breq	.+12     	; 0x91e <__fp_mpack_finite+0xc>

00000912 <__fp_mpack_finite>:
 912:	91 50       	subi	r25, 0x01	; 1
 914:	20 f4       	brcc	.+8      	; 0x91e <__fp_mpack_finite+0xc>
 916:	87 95       	ror	r24
 918:	77 95       	ror	r23
 91a:	67 95       	ror	r22
 91c:	b7 95       	ror	r27
 91e:	88 0f       	add	r24, r24
 920:	91 1d       	adc	r25, r1
 922:	96 95       	lsr	r25
 924:	87 95       	ror	r24
 926:	97 f9       	bld	r25, 7
 928:	08 95       	ret

0000092a <__fp_norm2>:
 92a:	91 50       	subi	r25, 0x01	; 1
 92c:	50 40       	sbci	r21, 0x00	; 0
 92e:	66 0f       	add	r22, r22
 930:	77 1f       	adc	r23, r23
 932:	88 1f       	adc	r24, r24
 934:	d2 f7       	brpl	.-12     	; 0x92a <__fp_norm2>
 936:	08 95       	ret

00000938 <__udivmodsi4>:
 938:	a1 e2       	ldi	r26, 0x21	; 33
 93a:	1a 2e       	mov	r1, r26
 93c:	aa 1b       	sub	r26, r26
 93e:	bb 1b       	sub	r27, r27
 940:	fd 01       	movw	r30, r26
 942:	0d c0       	rjmp	.+26     	; 0x95e <__udivmodsi4_ep>

00000944 <__udivmodsi4_loop>:
 944:	aa 1f       	adc	r26, r26
 946:	bb 1f       	adc	r27, r27
 948:	ee 1f       	adc	r30, r30
 94a:	ff 1f       	adc	r31, r31
 94c:	a2 17       	cp	r26, r18
 94e:	b3 07       	cpc	r27, r19
 950:	e4 07       	cpc	r30, r20
 952:	f5 07       	cpc	r31, r21
 954:	20 f0       	brcs	.+8      	; 0x95e <__udivmodsi4_ep>
 956:	a2 1b       	sub	r26, r18
 958:	b3 0b       	sbc	r27, r19
 95a:	e4 0b       	sbc	r30, r20
 95c:	f5 0b       	sbc	r31, r21

0000095e <__udivmodsi4_ep>:
 95e:	66 1f       	adc	r22, r22
 960:	77 1f       	adc	r23, r23
 962:	88 1f       	adc	r24, r24
 964:	99 1f       	adc	r25, r25
 966:	1a 94       	dec	r1
 968:	69 f7       	brne	.-38     	; 0x944 <__udivmodsi4_loop>
 96a:	60 95       	com	r22
 96c:	70 95       	com	r23
 96e:	80 95       	com	r24
 970:	90 95       	com	r25
 972:	9b 01       	movw	r18, r22
 974:	ac 01       	movw	r20, r24
 976:	bd 01       	movw	r22, r26
 978:	cf 01       	movw	r24, r30
 97a:	08 95       	ret

0000097c <__umulhisi3>:
 97c:	a2 9f       	mul	r26, r18
 97e:	b0 01       	movw	r22, r0
 980:	b3 9f       	mul	r27, r19
 982:	c0 01       	movw	r24, r0
 984:	a3 9f       	mul	r26, r19
 986:	70 0d       	add	r23, r0
 988:	81 1d       	adc	r24, r1
 98a:	11 24       	eor	r1, r1
 98c:	91 1d       	adc	r25, r1
 98e:	b2 9f       	mul	r27, r18
 990:	70 0d       	add	r23, r0
 992:	81 1d       	adc	r24, r1
 994:	11 24       	eor	r1, r1
 996:	91 1d       	adc	r25, r1
 998:	08 95       	ret

0000099a <_exit>:
 99a:	f8 94       	cli

0000099c <__stop_program>:
 99c:	ff cf       	rjmp	.-2      	; 0x99c <__stop_program>
